[{"D:\\react\\bilibili\\src\\store\\actions.ts":"1","D:\\react\\bilibili\\src\\api\\axios.ts":"2","D:\\react\\bilibili\\src\\store\\reducers.ts":"3","D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx":"4","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx":"5","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx":"6","D:\\react\\bilibili\\src\\index.tsx":"7","D:\\react\\bilibili\\src\\pages\\Index\\index.tsx":"8","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx":"9","D:\\react\\bilibili\\src\\pages\\Live\\index.tsx":"10","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx":"11","D:\\react\\bilibili\\src\\store\\index.ts":"12","D:\\react\\bilibili\\src\\api\\index.ts":"13","D:\\react\\bilibili\\src\\App.tsx":"14","D:\\react\\bilibili\\src\\components\\Header\\index.tsx":"15","D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx":"16","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx":"17","D:\\react\\bilibili\\src\\pages\\My\\index.tsx":"18","D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx":"19","D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx":"20","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx":"21","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx":"22","D:\\react\\bilibili\\src\\util\\index.ts":"23","D:\\react\\bilibili\\src\\components\\Logo.tsx":"24","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx":"25","D:\\react\\bilibili\\src\\components\\Avatar.tsx":"26","D:\\react\\bilibili\\src\\components\\BarDot.tsx":"27","D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx":"28","D:\\react\\bilibili\\src\\components\\Comments\\index.tsx":"29"},{"size":5711,"mtime":1609771616780,"results":"30","hashOfConfig":"31"},{"size":746,"mtime":1609592456696,"results":"32","hashOfConfig":"31"},{"size":3551,"mtime":1609771123044,"results":"33","hashOfConfig":"31"},{"size":2852,"mtime":1609770018582,"results":"34","hashOfConfig":"31"},{"size":7906,"mtime":1609762170602,"results":"35","hashOfConfig":"31"},{"size":1410,"mtime":1609587250475,"results":"36","hashOfConfig":"31"},{"size":221,"mtime":1609244241164,"results":"37","hashOfConfig":"31"},{"size":1355,"mtime":1609669964118,"results":"38","hashOfConfig":"31"},{"size":3278,"mtime":1609434376479,"results":"39","hashOfConfig":"31"},{"size":1194,"mtime":1609500183678,"results":"40","hashOfConfig":"31"},{"size":2418,"mtime":1609773175471,"results":"41","hashOfConfig":"31"},{"size":256,"mtime":1609325772460,"results":"42","hashOfConfig":"31"},{"size":1636,"mtime":1609770939337,"results":"43","hashOfConfig":"31"},{"size":1304,"mtime":1609580608338,"results":"44","hashOfConfig":"31"},{"size":669,"mtime":1609565612204,"results":"45","hashOfConfig":"31"},{"size":4767,"mtime":1609773965756,"results":"46","hashOfConfig":"31"},{"size":1597,"mtime":1609590847825,"results":"47","hashOfConfig":"31"},{"size":2064,"mtime":1609483345357,"results":"48","hashOfConfig":"31"},{"size":1677,"mtime":1609433256078,"results":"49","hashOfConfig":"31"},{"size":1240,"mtime":1609493724212,"results":"50","hashOfConfig":"31"},{"size":2770,"mtime":1609587215987,"results":"51","hashOfConfig":"31"},{"size":2529,"mtime":1609576230514,"results":"52","hashOfConfig":"31"},{"size":1386,"mtime":1609753379168,"results":"53","hashOfConfig":"31"},{"size":7774,"mtime":1609247415108,"results":"54","hashOfConfig":"31"},{"size":1342,"mtime":1609752770174,"results":"55","hashOfConfig":"31"},{"size":1978,"mtime":1609690833486,"results":"56","hashOfConfig":"31"},{"size":890,"mtime":1609690885792,"results":"57","hashOfConfig":"31"},{"size":631,"mtime":1609424041763,"results":"58","hashOfConfig":"31"},{"size":1158,"mtime":1609775399131,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6upha",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\bilibili\\src\\store\\actions.ts",[],"D:\\react\\bilibili\\src\\api\\axios.ts",[],"D:\\react\\bilibili\\src\\store\\reducers.ts",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx",["135"],"import React, { useEffect, useState } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../../components/Logo\";\r\nimport './style.styl'\r\nimport VideoPlayer from '../../components/VideoPlayer'\r\n\r\n\r\n\r\nconst LiveRoom = (props) => {\r\n  const { location, getStreamingDispatch, streaming, streamInfo, getStreamInfoDispatch } = props\r\n  const roomid = location.search.match(/\\d+/)\r\n  const [activeBar, setActiveBar] = useState(0)\r\n  useEffect(() => {\r\n    // setInterval(()=>{\r\n    getStreamingDispatch(roomid)\r\n    // },5000)\r\n    getStreamInfoDispatch(roomid)\r\n  }, [])\r\n  const anchor_info = streamInfo.anchor_info\r\n  const an = Object.assign({}, anchor_info).base_info\r\n  const base_info = Object.assign({}, an)\r\n  const relation_info = Object.assign({}, anchor_info).relation_info\r\n  const room_info = Object.assign({}, streamInfo.room_info)\r\n  const attention = Object.assign({}, relation_info).attention\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='roomHeader'>\r\n        <a href=\"/index\" className='logo'>\r\n          <Logo />\r\n        </a>\r\n        <div className='liveType'>\r\n          <span onClick={() => props.history.push('/lives_area')}>直播分类</span>\r\n          <span>{'>'}</span>\r\n          <span>视频聊天</span>\r\n        </div>\r\n      </div>\r\n      <div className='livePlayer'>\r\n        <VideoPlayer isLive={true} playerUrl={streaming} />\r\n      </div>\r\n      <div className='liveInfo'>\r\n        <div className='avatar'>\r\n          <img src={base_info.face} alt=\"\" />\r\n        </div>\r\n        <div className='about'>\r\n          <div className='author_name'>主播：{base_info.uname}</div>\r\n          <div className='author_about'>\r\n            <div>人气：{room_info.online}</div>\r\n            <div>粉丝：{attention}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='chatContainer'>\r\n        <div className='chatBar'>\r\n          <div><span className={activeBar === 0 ? 'activeBar' : ''} onClick={() => { setActiveBar(0) }}>互动</span></div>\r\n          <div><span className={activeBar === 0 ? '' : 'activeBar'} onClick={() => { setActiveBar(1) }}>简介</span></div>\r\n        </div>\r\n        {\r\n          activeBar === 0 ? null :\r\n            <div className='description'>\r\n              <div dangerouslySetInnerHTML={{ __html: room_info.description }}>\r\n              </div>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getStreamingDispatch(props) {\r\n        dispatch(actionTypes.fetchStreaming(props))\r\n      },\r\n      getStreamInfoDispatch(props) {\r\n        dispatch(actionTypes.fetchStreamInfo(props))\r\n      },\r\n\r\n    };\r\n  }\r\n)(LiveRoom);\r\n","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx",["136","137","138","139","140","141","142","143","144","145"],"D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx",["146"],"import React from 'react'\r\nimport './style.styl'\r\nimport IconRight from '../../assets/right.png'\r\n\r\nconst LiveTypes = (props) => {\r\n\r\n  const { liveList,history } = props\r\n\r\n  return (\r\n    <>\r\n      {\r\n        liveList.map((list,i) => {\r\n          return (\r\n            <div key={i} className='liveList'>\r\n              <div className='topBg'></div>\r\n              <div className='listContent'>\r\n                <div className='contentTitle'>\r\n                  <div className='title'>{list.module_info.title}</div>\r\n                  <a href=\"\">\r\n                    <p>进去看看</p>\r\n                    <img src={IconRight} alt=\"\" />\r\n                  </a>\r\n                </div>\r\n                <div className='itemContent'>\r\n                  {\r\n                    list.list.map((item,a) => {\r\n                      return (\r\n                        <div key={a} className='liveItem' onClick={()=>history.push(`/live_room?roomid=${item.roomid}`)}>\r\n                          <div>\r\n                            <img src={item.cover} alt=\"\" />\r\n                          </div>\r\n                          <div className='liveTitle'>{item.title}</div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default LiveTypes",["147","148"],"D:\\react\\bilibili\\src\\index.tsx",[],["149","150"],"D:\\react\\bilibili\\src\\pages\\Index\\index.tsx",["151"],"import React, { useEffect} from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport Swiper from '../../components/Swiper/index'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\nimport Recommend from '../../components/Recommend'\r\nimport MenuBar from '../../components/MenuBar'\r\n\r\nconst Index = (props) => {\r\n  const { getBannerListDispatch, banners, recommendList, getRecommendListDispatch } = props\r\n  useEffect(() => {\r\n    if (!banners.length) {\r\n      getBannerListDispatch()\r\n    }\r\n    if (!recommendList.length) {\r\n      getRecommendListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <MenuBar  history={props.history} chooseId={0} />\r\n      <div className='swiper_container'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <div className='recommend'>\r\n        <Recommend recommendList={recommendList}   />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getBannerListDispatch() {\r\n        dispatch(actionTypes.getBannerList())\r\n      },\r\n      getRecommendListDispatch() {\r\n        dispatch(actionTypes.getRecommendList())\r\n      },\r\n    };\r\n  }\r\n)(Index);\r\n","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx",[],["152","153"],"D:\\react\\bilibili\\src\\pages\\Live\\index.tsx",["154","155"],"import React, { useEffect, useState } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport Swiper from '../../components/Swiper'\r\nimport LiveTypes from '../../components/LiveTypes'\r\n\r\n\r\nconst Live = (props) => {\r\n\r\n  const { getLiveListDispatch, liveList, banners } = props\r\n\r\n\r\n  useEffect(() => {\r\n    if (!liveList.length) {\r\n      getLiveListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='liveBar'>\r\n        <div>首页</div>\r\n        <div>频道</div>\r\n        <div className='live'>直播</div>\r\n        <div>排行</div>\r\n        <div>我的</div>\r\n      </div>\r\n      <div className='liveBanner'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <LiveTypes liveList={liveList.slice(13)} history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getLiveListDispatch() {\r\n        dispatch(actionTypes.fetchLiveList())\r\n      },\r\n\r\n    };\r\n  }\r\n)(Live);",["156","157"],"D:\\react\\bilibili\\src\\pages\\Video\\index.tsx",["158"],"D:\\react\\bilibili\\src\\store\\index.ts",[],["159","160"],"D:\\react\\bilibili\\src\\api\\index.ts",[],"D:\\react\\bilibili\\src\\App.tsx",[],"D:\\react\\bilibili\\src\\components\\Header\\index.tsx",[],["161","162"],"D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx",["163"],"import React, { useEffect, useState } from 'react'\r\nimport IconHot from '../../assets/fire.png'\r\nimport './style.styl'\r\nimport IconZan from '../../assets/zan.png'\r\nimport IconStar from '../../assets/star.png'\r\nimport IconDownload from '../../assets/download.png'\r\nimport IconBan from '../../assets/ban.png'\r\nimport classnames from 'classnames'\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport IconArrowUp from '../../assets/arrow_up.png'\r\nimport { timestampToTime, tenThousand } from '../../util'\r\nimport Comments from '../../components/Comments'\r\n\r\n\r\nconst PlayerDetail = (props) => {\r\n  const { playerDetail, detailRecommend, history,comments } = props\r\n  const author = Object.assign({}, playerDetail.owner)\r\n  const stat= Object.assign({}, playerDetail.stat)\r\n\r\n  const [spread, setSpread] = useState(false)\r\n  const [selectComments, setSelectComments] = useState(false)\r\n\r\n  const toggleSpread = () => {\r\n    if (spread) {\r\n      setSpread(false)\r\n    } else {\r\n      setSpread(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n\r\n  return (\r\n    <div className='detail_container'>\r\n      <div className='player_info'   >\r\n        <div className='top_info'>\r\n          <div className='hot'>\r\n            <img src={IconHot} alt=\"\" />\r\n            <span>热门</span>\r\n          </div>\r\n          <h1 className={classnames(spread ? 'spreadTitle' : 'title')}>{playerDetail.title}</h1>\r\n          <img className={classnames('iconDown', spread ? 'spreadClass' : '')} onClick={toggleSpread} src={IconArrowDown} alt=\"\" />\r\n        </div>\r\n\r\n        {\r\n          spread ? <div className='detail_info'>\r\n            <div className='author'>\r\n              <img className='avatar' src={author.face} alt=\"\" />\r\n              <div>\r\n                <div className='author_name'>{author.name}</div>\r\n                <div className='fans'>60.5万粉丝</div>\r\n              </div>\r\n              <div className='payAttention'>+ 关注</div>\r\n            </div>\r\n            <div className='viewInfo'>\r\n              <span>{tenThousand(playerDetail.stat.view)}观看</span>\r\n              <span>{tenThousand(playerDetail.stat.danmaku)}弹幕</span>\r\n              <span>{timestampToTime(playerDetail.pubdate).substr(0, 10)}</span>\r\n            </div>\r\n            <div className='banInfo'>\r\n              <img src={IconBan} alt=\"\" />\r\n              <span>未经作者授权禁止转载</span>\r\n            </div>\r\n            <div className='authorSay'>{playerDetail.desc}</div>\r\n            <div className='left_info'>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div> :\r\n            <div className='video_tool'>\r\n              <div className='author'>\r\n                <img className='avatar' src={author.face} alt=\"\" />\r\n                <div className='author_name'>{author.name}</div>\r\n              </div>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span></div>\r\n            </div>\r\n        }\r\n      </div>\r\n      <div className='recommendList'>\r\n        <div className='listBar'>\r\n          <div onClick={() => setSelectComments(false)}> <span className={selectComments ? '' : 'selected'}>相关推荐</span></div>\r\n          <div onClick={() => setSelectComments(true)}><span className={selectComments ? 'selected' : ''}>评论</span></div>\r\n        </div>\r\n        <div className={classnames('listContainer', selectComments ? 'commentsSelected' : '')} >\r\n          {\r\n            detailRecommend.map((item) => {\r\n              return (\r\n                <div key={item.aid} className='listItem' onClick={() => history.push(`/space?mid=${item.owner.mid}`)}>\r\n                  <div>\r\n                    <img src={item.pic} alt=\"\" />\r\n                  </div>\r\n                  <div>{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {\r\n          selectComments? <Comments comments={comments} /> : null\r\n        } \r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default PlayerDetail","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx",[],["164","165"],"D:\\react\\bilibili\\src\\pages\\My\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx",["166"],"import React, { useState, useEffect } from 'react'\r\nimport \"swiper/dist/css/swiper.css\"\r\nimport Swiper from 'swiper'\r\nimport './style.styl'\r\n\r\n\r\nconst Slider = (props) => {\r\n  const [sliderSwiper, setSliderSwiper] = useState(null)\r\n\r\n  const { bannerList } = props\r\n\r\n  useEffect(() => {\r\n    if (bannerList.length && !sliderSwiper) {\r\n      let sliderSwiper = new Swiper(\".slider-container\", {\r\n        loop: true,\r\n        autoplay: {\r\n          delay: 3000,\r\n          disableOnInteraction: false,\r\n        },\r\n        pagination: { el: '.swiper-pagination' },\r\n      });\r\n      setSliderSwiper(sliderSwiper);\r\n    }\r\n  }, [bannerList.length, sliderSwiper])\r\n\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <div className=\"swiper-wrapper\">\r\n        {bannerList.length?\r\n          bannerList.map((slider, i) => {\r\n            return (\r\n              <div className=\"swiper-slide\" key={slider.id}>\r\n                <div className=\"slider-nav\">\r\n                  <img src={slider.pic} width=\"100%\" height=\"100%\" />\r\n                </div>\r\n              </div>\r\n            )\r\n          }):null\r\n        }\r\n        \r\n      </div>\r\n      <div className=\"swiper-pagination\"></div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Slider","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx",["167","168"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\n\r\nimport './style.styl'\r\n\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport IconArrowUp from '../../assets/arrow_up.png'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst menuList = [\r\n  { \"tid\": 0, \"typename\": \"首页\" },\r\n  { \"tid\": 1, \"typename\": \"动画\" },\r\n  { \"tid\": 13, \"typename\": \"番剧\" },\r\n  { \"tid\": 168, \"typename\": \"国创\" },\r\n  { \"tid\": 3, \"typename\": \"音乐\" },\r\n  { \"tid\": 129, \"typename\": \"舞蹈\" },\r\n  { \"tid\": 4, \"typename\": \"游戏\" }, {\r\n    \"tid\": 36, \"typename\": \"科技\"\r\n  },\r\n  { \"tid\": 188, \"typename\": \"数码\" },\r\n  { \"tid\": 160, \"typename\": \"生活\" },\r\n  { \"tid\": 119, \"typename\": \"鬼畜\" },\r\n  { \"tid\": 155, \"typename\": \"时尚\" },\r\n  { \"tid\": 5, \"typename\": \"娱乐\" },\r\n  { \"tid\": 181, \"typename\": \"影视\" },\r\n  { \"tid\": 177, \"typename\": \"纪录片\" },\r\n  { \"tid\": 23, \"typename\": \"电影\" },\r\n  // { \"tid\": 11, \"typename\": \"电视剧\" },\r\n  { \"tid\": 999, \"typename\": \"直播\" }\r\n]\r\n\r\n\r\n\r\nconst MenuBar = (props) => {\r\n  const { typeList, history, chooseId, fetchData } = props\r\n  const [chooseBar, setChooseBar] = useState(0)\r\n\r\n  const barRef = useRef(null)\r\n\r\n  console.log(typeList)\r\n  const [showBox, setShowBox] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setChooseBar(chooseId)\r\n  }, [chooseId])\r\n\r\n  const selectRegion = (e) => {\r\n    if (e === 0) {\r\n      history.push('/index')\r\n    } else {\r\n      if (e === 999) {\r\n        history.push('/lives')\r\n      } else {\r\n        if (fetchData !== undefined) {\r\n          fetchData(true)\r\n        }\r\n        history.push(`/channel?tid=${e}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='bar_container'>\r\n\r\n      <div className='menu_bar'>\r\n        <div className='menu' ref={barRef}>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}>\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='arrow'>\r\n          <img src={IconArrowDown} onClick={() => setShowBox(true)} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('wrapper', showBox ? 'showWrapper' : '')}>\r\n        <div className='wrapper_box'>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}\r\n            >\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img className='icon_up' src={IconArrowUp} onClick={() => setShowBox(false)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MenuBar",["169","170"],"D:\\react\\bilibili\\src\\pages\\Space\\index.tsx",["171","172"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport{tenThousand} from '../../util'\r\n\r\nconst Space = (props) => {\r\n  const {upInfo,getUpInfoDispatch} = props\r\n  const [choiceVideo, setChoiceVideo] = useState(false)\r\n  const mid = props.location.search.match(/\\d+/)\r\n\r\n  useEffect(()=>{\r\n    getUpInfoDispatch(mid)\r\n  },[])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <div>\r\n        <div className='banner'>\r\n          <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/bannerTop_new.png\" alt=\"\" />\r\n        </div>\r\n        <div className='userInfo'>\r\n          <img src={upInfo.face} alt=\"\" />\r\n          <div className='fansInfo'>\r\n            <div className='fans'>\r\n              <div className='item'>\r\n                <div className='number'>666</div>\r\n                <div className='type'>粉丝</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>35</div>\r\n                <div className='type'>关注</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>4532</div>\r\n                <div className='type'>获赞</div>\r\n              </div>\r\n            </div>\r\n            <div className='editInfo'>编辑资料</div>\r\n          </div>\r\n        </div>\r\n        <div className='username'>\r\n          {upInfo.name}\r\n        </div>\r\n        <div className='userAbout'>{upInfo.sign}</div>\r\n        <div className='tabBar'>\r\n          <div> <span className={choiceVideo ? ' ' : 'active'} onClick={()=>setChoiceVideo(false)}>动态</span></div>\r\n          <div><span className={choiceVideo ? 'active' : ''} onClick={()=>setChoiceVideo(true)}>视频</span></div>\r\n        </div>\r\n        <div className='content'>\r\n            <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/noContent.png\" alt=\"\"/>\r\n            <div className='sleep'>小哔睡着了~</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getUpInfoDispatch(props) {\r\n        dispatch(actionTypes.fetchUpInfo(props))\r\n      },\r\n     \r\n    };\r\n  }\r\n)(Space);\r\n","D:\\react\\bilibili\\src\\util\\index.ts",["173","174","175","176","177","178"],"//时间戳转换日期\r\n\r\nexport function timestampToTime(timestamp) {\r\n  var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n  var Y = date.getFullYear() + '-';\r\n  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n  var D = date.getDate() + ' ';\r\n  var h = date.getHours() + ':';\r\n  var m = date.getMinutes() + ':';\r\n  var s = date.getSeconds();\r\n  return Y + M + D + h + m + s;\r\n}\r\n\r\n//数值取万\r\n\r\nexport function tenThousand(props){\r\n  if(props>1000){\r\n    return (props/10000).toFixed(1) + '万'\r\n  }else{\r\n    return props\r\n  }\r\n}\r\n\r\n//10进制颜色转rgba\r\n\r\nexport  function getColor(number) {\r\n  const alpha = number >> 24 & 0xff;\r\n  const red = number >> 16 & 0xff;\r\n  const green = number >> 8 & 0xff;\r\n  const blue = number & 0xff;\r\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\r\n}\r\n\r\n// 防抖函数\r\nexport const debounce = (func, delay)=> {\r\n  let timer\r\n  return (...args) =>{\r\n    if (timer) {\r\n      clearTimeout(timer)\r\n    }\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args)\r\n    }, delay)\r\n  }\r\n}\r\n\r\n// 节流函数\r\nexport const throttle = (func, delay)=> {\r\n  let now = Date.now()\r\n  return (...args)=> {\r\n    const current = Date.now()\r\n    if (current - now >= delay) {\r\n      func.apply(this, args)\r\n      now = current\r\n    }\r\n  }\r\n}\r\n","D:\\react\\bilibili\\src\\components\\Logo.tsx",[],"D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx",["179","180"],"D:\\react\\bilibili\\src\\components\\Avatar.tsx",[],"D:\\react\\bilibili\\src\\components\\BarDot.tsx",[],"D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx",["181"],"D:\\react\\bilibili\\src\\components\\Comments\\index.tsx",[],{"ruleId":"182","severity":1,"message":"183","line":19,"column":6,"nodeType":"184","endLine":19,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":10,"column":8,"nodeType":"188","messageId":"189","endLine":10,"endColumn":14},{"ruleId":"186","severity":1,"message":"191","line":11,"column":20,"nodeType":"188","messageId":"189","endLine":11,"endColumn":28},{"ruleId":"186","severity":1,"message":"192","line":24,"column":10,"nodeType":"188","messageId":"189","endLine":24,"endColumn":22},{"ruleId":"186","severity":1,"message":"193","line":24,"column":24,"nodeType":"188","messageId":"189","endLine":24,"endColumn":39},{"ruleId":"186","severity":1,"message":"194","line":30,"column":9,"nodeType":"188","messageId":"189","endLine":30,"endColumn":24},{"ruleId":"182","severity":1,"message":"195","line":38,"column":22,"nodeType":"196","endLine":46,"endColumn":14},{"ruleId":"186","severity":1,"message":"197","line":43,"column":11,"nodeType":"188","messageId":"189","endLine":43,"endColumn":16},{"ruleId":"182","severity":1,"message":"198","line":43,"column":20,"nodeType":"199","endLine":43,"endColumn":21},{"ruleId":"182","severity":1,"message":"200","line":142,"column":6,"nodeType":"184","endLine":142,"endColumn":17,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":19,"column":19,"nodeType":"204","endLine":19,"endColumn":30},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"182","severity":1,"message":"211","line":19,"column":6,"nodeType":"184","endLine":19,"endColumn":8,"suggestions":"212"},{"ruleId":"205","replacedBy":"213"},{"ruleId":"207","replacedBy":"214"},{"ruleId":"186","severity":1,"message":"215","line":1,"column":28,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"216","line":20,"column":6,"nodeType":"184","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"205","replacedBy":"218"},{"ruleId":"207","replacedBy":"219"},{"ruleId":"186","severity":1,"message":"220","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":16},{"ruleId":"205","replacedBy":"221"},{"ruleId":"207","replacedBy":"222"},{"ruleId":"205","replacedBy":"223"},{"ruleId":"207","replacedBy":"224"},{"ruleId":"186","severity":1,"message":"225","line":10,"column":8,"nodeType":"188","messageId":"189","endLine":10,"endColumn":19},{"ruleId":"205","replacedBy":"226"},{"ruleId":"207","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":34,"column":19,"nodeType":"204","endLine":34,"endColumn":70},{"ruleId":"228","severity":1,"message":"229","line":78,"column":11,"nodeType":"204","endLine":78,"endColumn":71},{"ruleId":"228","severity":1,"message":"229","line":92,"column":9,"nodeType":"204","endLine":92,"endColumn":88},{"ruleId":"205","replacedBy":"230"},{"ruleId":"207","replacedBy":"231"},{"ruleId":"186","severity":1,"message":"232","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":19},{"ruleId":"182","severity":1,"message":"233","line":15,"column":5,"nodeType":"184","endLine":15,"endColumn":7,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":27,"column":24,"nodeType":"237","messageId":"238","endLine":27,"endColumn":26},{"ruleId":"235","severity":1,"message":"236","line":27,"column":30,"nodeType":"237","messageId":"238","endLine":27,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":28,"column":22,"nodeType":"237","messageId":"238","endLine":28,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":28,"column":28,"nodeType":"237","messageId":"238","endLine":28,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":29,"column":24,"nodeType":"237","messageId":"238","endLine":29,"endColumn":26},{"ruleId":"235","severity":1,"message":"236","line":29,"column":29,"nodeType":"237","messageId":"238","endLine":29,"endColumn":30},{"ruleId":"186","severity":1,"message":"239","line":11,"column":21,"nodeType":"188","messageId":"189","endLine":11,"endColumn":27},{"ruleId":"182","severity":1,"message":"240","line":17,"column":6,"nodeType":"184","endLine":17,"endColumn":8,"suggestions":"241"},{"ruleId":"186","severity":1,"message":"242","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStreamInfoDispatch', 'getStreamingDispatch', and 'roomid'. Either include them or remove the dependency array.","ArrayExpression",["243"],"@typescript-eslint/no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'BarDot' is defined but never used.","'throttle' is defined but never used.","'showControls' is assigned a value but never used.","'setShowControls' is assigned a value but never used.","'MAX_DANMU_COUNT' is assigned a value but never used.","Assignments to the 'barrageTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'start' is assigned a value but never used.","Assignments to the 'start' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'initVideo' and 'isLive'. Either include them or remove the dependency array.",["244"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],"React Hook useEffect has missing dependencies: 'banners.length', 'getBannerListDispatch', 'getRecommendListDispatch', and 'recommendList.length'. Either include them or remove the dependency array.",["247"],["245"],["246"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getLiveListDispatch' and 'liveList.length'. Either include them or remove the dependency array.",["248"],["245"],["246"],"'Comments' is defined but never used.",["245"],["246"],["245"],["246"],"'IconArrowUp' is defined but never used.",["245"],["246"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["245"],["246"],"'tenThousand' is defined but never used.","React Hook useEffect has missing dependencies: 'getUpInfoDispatch' and 'mid'. Either include them or remove the dependency array.",["249"],"no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator","'region' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRegionDispatch' and 'rid'. Either include them or remove the dependency array.",["250"],"'useEffect' is defined but never used.",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [getStreamInfoDispatch, getStreamingDispatch, roomid]",{"range":"263","text":"264"},"Update the dependencies array to be: [initVideo, isLive, playerUrl]",{"range":"265","text":"266"},"Update the dependencies array to be: [banners.length, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",{"range":"267","text":"268"},"Update the dependencies array to be: [getLiveListDispatch, liveList.length]",{"range":"269","text":"270"},"Update the dependencies array to be: [getUpInfoDispatch, mid]",{"range":"271","text":"272"},"Update the dependencies array to be: [getRegionDispatch, rid]",{"range":"273","text":"274"},[635,637],"[getStreamInfoDispatch, getStreamingDispatch, roomid]",[4025,4036],"[initVideo, isLive, playerUrl]",[645,647],"[banners.length, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",[502,504],"[getLiveListDispatch, liveList.length]",[487,489],"[getUpInfoDispatch, mid]",[475,477],"[getRegionDispatch, rid]"]