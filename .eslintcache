[{"D:\\react\\bilibili\\src\\store\\actions.ts":"1","D:\\react\\bilibili\\src\\api\\axios.ts":"2","D:\\react\\bilibili\\src\\store\\reducers.ts":"3","D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx":"4","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx":"5","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx":"6","D:\\react\\bilibili\\src\\index.tsx":"7","D:\\react\\bilibili\\src\\pages\\Index\\index.tsx":"8","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx":"9","D:\\react\\bilibili\\src\\pages\\Live\\index.tsx":"10","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx":"11","D:\\react\\bilibili\\src\\store\\index.ts":"12","D:\\react\\bilibili\\src\\api\\index.ts":"13","D:\\react\\bilibili\\src\\App.tsx":"14","D:\\react\\bilibili\\src\\components\\Header\\index.tsx":"15","D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx":"16","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx":"17","D:\\react\\bilibili\\src\\pages\\My\\index.tsx":"18","D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx":"19","D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx":"20","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx":"21","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx":"22","D:\\react\\bilibili\\src\\util\\index.ts":"23","D:\\react\\bilibili\\src\\components\\Logo.tsx":"24","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx":"25"},{"size":5294,"mtime":1609668823618,"results":"26","hashOfConfig":"27"},{"size":746,"mtime":1609592456696,"results":"28","hashOfConfig":"27"},{"size":3316,"mtime":1609668718241,"results":"29","hashOfConfig":"27"},{"size":2245,"mtime":1609576639507,"results":"30","hashOfConfig":"27"},{"size":5596,"mtime":1609684982181,"results":"31","hashOfConfig":"27"},{"size":1410,"mtime":1609587250475,"results":"32","hashOfConfig":"27"},{"size":221,"mtime":1609244241164,"results":"33","hashOfConfig":"27"},{"size":1355,"mtime":1609669964118,"results":"34","hashOfConfig":"27"},{"size":3278,"mtime":1609434376479,"results":"35","hashOfConfig":"27"},{"size":1194,"mtime":1609500183678,"results":"36","hashOfConfig":"27"},{"size":2163,"mtime":1609669076258,"results":"37","hashOfConfig":"27"},{"size":256,"mtime":1609325772460,"results":"38","hashOfConfig":"27"},{"size":1526,"mtime":1609592540363,"results":"39","hashOfConfig":"27"},{"size":1304,"mtime":1609580608338,"results":"40","hashOfConfig":"27"},{"size":669,"mtime":1609565612204,"results":"41","hashOfConfig":"27"},{"size":4663,"mtime":1609673172257,"results":"42","hashOfConfig":"27"},{"size":1597,"mtime":1609590847825,"results":"43","hashOfConfig":"27"},{"size":2064,"mtime":1609483345357,"results":"44","hashOfConfig":"27"},{"size":1677,"mtime":1609433256078,"results":"45","hashOfConfig":"27"},{"size":1240,"mtime":1609493724212,"results":"46","hashOfConfig":"27"},{"size":2770,"mtime":1609587215987,"results":"47","hashOfConfig":"27"},{"size":2529,"mtime":1609576230514,"results":"48","hashOfConfig":"27"},{"size":905,"mtime":1609671504139,"results":"49","hashOfConfig":"27"},{"size":7774,"mtime":1609247415108,"results":"50","hashOfConfig":"27"},{"size":1342,"mtime":1609586286998,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6upha",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\bilibili\\src\\store\\actions.ts",[],"D:\\react\\bilibili\\src\\api\\axios.ts",[],"D:\\react\\bilibili\\src\\store\\reducers.ts",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx",["111"],"D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx",["112","113","114","115","116","117","118"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './style.styl'\r\nimport ReactPlayer from 'react-player'\r\nimport * as Hls from \"hls.js\";\r\nimport IconPlay from '../../assets/tv-play.png'\r\nimport IconPause from '../../assets/tv-pause.png'\r\nimport IconBarrageOn from '../../assets/barrage-on.png'\r\nimport IconBarrageOff from '../../assets/barrage-off.png'\r\nimport IconFullScreen from '../../assets/fullscreen.png'\r\n\r\n\r\n\r\n\r\nconst VideoPlayer = (props) => {\r\n\r\n  const { playerUrl, isLive, closePic, danmu } = props\r\n  const videoRef = useRef(null)\r\n  const danmuRef = useRef(null)\r\n  const [played, setPlayed] = useState(false)\r\n  const [showControls, setShowControls] = useState(true)\r\n  const [barrageOn, setBarrageOn] = useState(false)\r\n  let barrageTimer\r\n\r\n  const domPool: any[] = []\r\n  const danmuPool: any[] = []\r\n  const MAX_DANMU_COUNT = 6\r\n  let start = 0\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(333)\r\n    if (barrageOn) {\r\n      init()\r\n      barrageTimer = setInterval(() => {\r\n        if (domPool.length) {\r\n          let dom = domPool.shift()\r\n          sendDanmu(dom)\r\n        } else {\r\n          start += 6\r\n          init()\r\n        }\r\n      }, 200)\r\n    }\r\n    return () => clearInterval(barrageTimer)\r\n\r\n  }, [barrageOn])\r\n\r\n\r\n\r\n  const init = () => {\r\n    let dom = document.querySelectorAll('.danmu')\r\n    if (dom.length) {\r\n      for (let i = 0; i < dom.length; i++) {\r\n        dom[i].addEventListener('transitionend', () => {\r\n          dom[i].remove()\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    const indexs: any[] = []\r\n\r\n    danmu.forEach((item, i) => {\r\n      if (parseInt(item.time, 10) === parseInt((videoRef as any).current.currentTime, 10)) {\r\n        danmuPool.push(item)\r\n        indexs.push(i)\r\n      }\r\n    })\r\n\r\n    indexs.forEach((index, i) => {\r\n      danmu.splice(index - i, 1)\r\n    })\r\n\r\n    console.log(danmuPool, 'pool')\r\n    if (danmuPool.length) {\r\n      for (let i = 0; i < danmuPool.length; i++) {\r\n        let div = document.createElement('div')\r\n        div.className = 'danmu'\r\n        div.innerHTML = danmuPool[i].content;\r\n        div.style.color = \"#\" + Number(danmuPool[i].decimalColor).toString(16)\r\n        div.style.position = 'absolute'\r\n        div.style.top = `${Math.random() * 30}vw`\r\n        div.style.marginLeft = '100vw'\r\n        div.style.overflow = 'hidden'\r\n        div.style.whiteSpace = 'nowrap'\r\n        div.style.width = 'mint-width';\r\n        (danmuRef as any).current.append(div);\r\n        domPool.push(div)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async function clearBarrage() {\r\n    (danmuRef as any).current.removeChild(await document.querySelectorAll('.danmu'))\r\n  }\r\n\r\n\r\n  const toggleSend = (e) => {\r\n    e.stopPropagation()\r\n    if (barrageOn) {\r\n      setBarrageOn(false)\r\n    } else {\r\n      setBarrageOn(true)\r\n    }\r\n  }\r\n\r\n  const sendDanmu = (dom) => {\r\n    const x = dom.offsetLeft + dom.clientWidth\r\n    dom.style.transform = `translateX(${-x}px)`\r\n    dom.style.transition = `all ${Math.round(1500 / x)}s linear`\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLive && playerUrl.length) {\r\n      const videoDom = videoRef.current\r\n      const videoSrc = playerUrl[3].url\r\n      if ((videoDom as any).canPlayType('application/vnd.apple.mpegurl')) {\r\n        (videoDom as any).src = videoSrc;\r\n      } else if ((Hls as any).isSupported()) {\r\n        var hls = new (Hls as any)();\r\n        hls.loadSource(videoSrc);\r\n        hls.attachMedia(videoDom);\r\n\r\n        (videoDom as any).addEventListener('canplay', () => {\r\n          (videoDom as any).play()\r\n          setPlayed(true)\r\n          setTimeout(() => {\r\n            setShowControls(false)\r\n          }, 3000)\r\n        })\r\n\r\n      }\r\n    }\r\n  }, [playerUrl])\r\n\r\n  const changePlay = (e) => {\r\n    e.stopPropagation()\r\n    const videoDom = videoRef.current\r\n    if (played) {\r\n      setPlayed(false);\r\n      (videoDom as any).pause()\r\n    } else {\r\n      if (!isLive) {\r\n        closePic(true)\r\n      }\r\n      setPlayed(true);\r\n      (videoDom as any).play()\r\n    }\r\n  }\r\n\r\n  const toggleShowControls = () => {\r\n    // console.log(barrageTimer)\r\n    // clearInterval(barrageTimer)\r\n    if (showControls) {\r\n      setShowControls(false)\r\n    } else {\r\n      setShowControls(true)\r\n      setTimeout(() => {\r\n        setShowControls(false)\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='video_wrapper' >\r\n      <div className='videoContainer' onClick={toggleShowControls}>\r\n        <div className='danmuContainer' ref={danmuRef}></div>\r\n        <video\r\n          src={isLive ? '' : playerUrl}\r\n          // controls={isLive ? false : true}\r\n          ref={videoRef} height=\"100%\" width=\"100%\" preload=\"auto\"\r\n          x5-playsinline=\"true\"\r\n          webkit-playsinline=\"true\"\r\n        />\r\n        {\r\n          showControls ? <div className='control' >\r\n            <img className='control-play' src={played ? IconPause : IconPlay} onClick={changePlay} alt=\"\" />\r\n            <div className='bottom-control'>\r\n              <img onClick={toggleSend} className='icon-barrage' src={barrageOn ? IconBarrageOn : IconBarrageOff} alt=\"\" />\r\n              <img  className='icon-fullscreen' src={IconFullScreen} alt=\"\" />\r\n            </div>\r\n          </div> : null\r\n        }\r\n\r\n      </div>\r\n      {/* <button onClick={send}>发送</button> */}\r\n\r\n      {/* <ReactPlayer\r\n            className='player'\r\n            width='100%' height='100%'\r\n            playing\r\n            controls\r\n            // autoPlay\r\n            url={playerUrl}\r\n          >           \r\n          </ReactPlayer>\r\n       */}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default VideoPlayer","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx",["119"],"D:\\react\\bilibili\\src\\index.tsx",[],["120","121"],"D:\\react\\bilibili\\src\\pages\\Index\\index.tsx",["122"],"import React, { useEffect} from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport Swiper from '../../components/Swiper/index'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\nimport Recommend from '../../components/Recommend'\r\nimport MenuBar from '../../components/MenuBar'\r\n\r\nconst Index = (props) => {\r\n  const { getBannerListDispatch, banners, recommendList, getRecommendListDispatch } = props\r\n  useEffect(() => {\r\n    if (!banners.length) {\r\n      getBannerListDispatch()\r\n    }\r\n    if (!recommendList.length) {\r\n      getRecommendListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <MenuBar  history={props.history} chooseId={0} />\r\n      <div className='swiper_container'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <div className='recommend'>\r\n        <Recommend recommendList={recommendList}   />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getBannerListDispatch() {\r\n        dispatch(actionTypes.getBannerList())\r\n      },\r\n      getRecommendListDispatch() {\r\n        dispatch(actionTypes.getRecommendList())\r\n      },\r\n    };\r\n  }\r\n)(Index);\r\n","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx",[],["123","124"],"D:\\react\\bilibili\\src\\pages\\Live\\index.tsx",["125","126"],"import React, { useEffect, useState } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport Swiper from '../../components/Swiper'\r\nimport LiveTypes from '../../components/LiveTypes'\r\n\r\n\r\nconst Live = (props) => {\r\n\r\n  const { getLiveListDispatch, liveList, banners } = props\r\n\r\n\r\n  useEffect(() => {\r\n    if (!liveList.length) {\r\n      getLiveListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='liveBar'>\r\n        <div>首页</div>\r\n        <div>频道</div>\r\n        <div className='live'>直播</div>\r\n        <div>排行</div>\r\n        <div>我的</div>\r\n      </div>\r\n      <div className='liveBanner'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <LiveTypes liveList={liveList.slice(13)} history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getLiveListDispatch() {\r\n        dispatch(actionTypes.fetchLiveList())\r\n      },\r\n\r\n    };\r\n  }\r\n)(Live);",["127","128"],"D:\\react\\bilibili\\src\\pages\\Video\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\index.ts",[],["129","130"],"D:\\react\\bilibili\\src\\api\\index.ts",[],"D:\\react\\bilibili\\src\\App.tsx",[],"D:\\react\\bilibili\\src\\components\\Header\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx",["131"],"D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\My\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx",["132"],"D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx",["133","134"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\n\r\nimport './style.styl'\r\n\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport IconArrowUp from '../../assets/arrow_up.png'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst menuList = [\r\n  { \"tid\": 0, \"typename\": \"首页\" },\r\n  { \"tid\": 1, \"typename\": \"动画\" },\r\n  { \"tid\": 13, \"typename\": \"番剧\" },\r\n  { \"tid\": 168, \"typename\": \"国创\" },\r\n  { \"tid\": 3, \"typename\": \"音乐\" },\r\n  { \"tid\": 129, \"typename\": \"舞蹈\" },\r\n  { \"tid\": 4, \"typename\": \"游戏\" }, {\r\n    \"tid\": 36, \"typename\": \"科技\"\r\n  },\r\n  { \"tid\": 188, \"typename\": \"数码\" },\r\n  { \"tid\": 160, \"typename\": \"生活\" },\r\n  { \"tid\": 119, \"typename\": \"鬼畜\" },\r\n  { \"tid\": 155, \"typename\": \"时尚\" },\r\n  { \"tid\": 5, \"typename\": \"娱乐\" },\r\n  { \"tid\": 181, \"typename\": \"影视\" },\r\n  { \"tid\": 177, \"typename\": \"纪录片\" },\r\n  { \"tid\": 23, \"typename\": \"电影\" },\r\n  // { \"tid\": 11, \"typename\": \"电视剧\" },\r\n  { \"tid\": 999, \"typename\": \"直播\" }\r\n]\r\n\r\n\r\n\r\nconst MenuBar = (props) => {\r\n  const { typeList, history, chooseId, fetchData } = props\r\n  const [chooseBar, setChooseBar] = useState(0)\r\n\r\n  const barRef = useRef(null)\r\n\r\n  console.log(typeList)\r\n  const [showBox, setShowBox] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setChooseBar(chooseId)\r\n  }, [chooseId])\r\n\r\n  const selectRegion = (e) => {\r\n    if (e === 0) {\r\n      history.push('/index')\r\n    } else {\r\n      if (e === 999) {\r\n        history.push('/lives')\r\n      } else {\r\n        if (fetchData !== undefined) {\r\n          fetchData(true)\r\n        }\r\n        history.push(`/channel?tid=${e}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='bar_container'>\r\n\r\n      <div className='menu_bar'>\r\n        <div className='menu' ref={barRef}>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}>\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='arrow'>\r\n          <img src={IconArrowDown} onClick={() => setShowBox(true)} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('wrapper', showBox ? 'showWrapper' : '')}>\r\n        <div className='wrapper_box'>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}\r\n            >\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img className='icon_up' src={IconArrowUp} onClick={() => setShowBox(false)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MenuBar","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx",["135","136"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport{tenThousand} from '../../util'\r\n\r\nconst Space = (props) => {\r\n  const {upInfo,getUpInfoDispatch} = props\r\n  const [choiceVideo, setChoiceVideo] = useState(false)\r\n  const mid = props.location.search.match(/\\d+/)\r\n\r\n  useEffect(()=>{\r\n    getUpInfoDispatch(mid)\r\n  },[])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <div>\r\n        <div className='banner'>\r\n          <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/bannerTop_new.png\" alt=\"\" />\r\n        </div>\r\n        <div className='userInfo'>\r\n          <img src={upInfo.face} alt=\"\" />\r\n          <div className='fansInfo'>\r\n            <div className='fans'>\r\n              <div className='item'>\r\n                <div className='number'>666</div>\r\n                <div className='type'>粉丝</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>35</div>\r\n                <div className='type'>关注</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>4532</div>\r\n                <div className='type'>获赞</div>\r\n              </div>\r\n            </div>\r\n            <div className='editInfo'>编辑资料</div>\r\n          </div>\r\n        </div>\r\n        <div className='username'>\r\n          {upInfo.name}\r\n        </div>\r\n        <div className='userAbout'>{upInfo.sign}</div>\r\n        <div className='tabBar'>\r\n          <div> <span className={choiceVideo ? ' ' : 'active'} onClick={()=>setChoiceVideo(false)}>动态</span></div>\r\n          <div><span className={choiceVideo ? 'active' : ''} onClick={()=>setChoiceVideo(true)}>视频</span></div>\r\n        </div>\r\n        <div className='content'>\r\n            <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/noContent.png\" alt=\"\"/>\r\n            <div className='sleep'>小哔睡着了~</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getUpInfoDispatch(props) {\r\n        dispatch(actionTypes.fetchUpInfo(props))\r\n      },\r\n     \r\n    };\r\n  }\r\n)(Space);\r\n","D:\\react\\bilibili\\src\\util\\index.ts",["137","138","139","140","141","142"],"D:\\react\\bilibili\\src\\components\\Logo.tsx",[],"D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx",["143","144"],{"ruleId":"145","severity":1,"message":"146","line":18,"column":5,"nodeType":"147","endLine":18,"endColumn":7,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":26,"column":9,"nodeType":"151","messageId":"152","endLine":26,"endColumn":24},{"ruleId":"145","severity":1,"message":"154","line":35,"column":22,"nodeType":"155","endLine":43,"endColumn":14},{"ruleId":"149","severity":1,"message":"156","line":40,"column":11,"nodeType":"151","messageId":"152","endLine":40,"endColumn":16},{"ruleId":"145","severity":1,"message":"157","line":40,"column":20,"nodeType":"158","endLine":40,"endColumn":21},{"ruleId":"149","severity":1,"message":"159","line":95,"column":18,"nodeType":"151","messageId":"152","endLine":95,"endColumn":30},{"ruleId":"145","severity":1,"message":"160","line":136,"column":6,"nodeType":"147","endLine":136,"endColumn":17,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":19,"column":19,"nodeType":"164","endLine":19,"endColumn":30},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"145","severity":1,"message":"169","line":19,"column":6,"nodeType":"147","endLine":19,"endColumn":8,"suggestions":"170"},{"ruleId":"165","replacedBy":"171"},{"ruleId":"167","replacedBy":"172"},{"ruleId":"149","severity":1,"message":"173","line":1,"column":28,"nodeType":"151","messageId":"152","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"174","line":20,"column":6,"nodeType":"147","endLine":20,"endColumn":8,"suggestions":"175"},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"165","replacedBy":"178"},{"ruleId":"167","replacedBy":"179"},{"ruleId":"149","severity":1,"message":"180","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":34,"column":19,"nodeType":"164","endLine":34,"endColumn":70},{"ruleId":"181","severity":1,"message":"182","line":78,"column":11,"nodeType":"164","endLine":78,"endColumn":71},{"ruleId":"181","severity":1,"message":"182","line":92,"column":9,"nodeType":"164","endLine":92,"endColumn":88},{"ruleId":"149","severity":1,"message":"183","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":19},{"ruleId":"145","severity":1,"message":"184","line":15,"column":5,"nodeType":"147","endLine":15,"endColumn":7,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":27,"column":24,"nodeType":"188","messageId":"189","endLine":27,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":27,"column":30,"nodeType":"188","messageId":"189","endLine":27,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":28,"column":22,"nodeType":"188","messageId":"189","endLine":28,"endColumn":24},{"ruleId":"186","severity":1,"message":"187","line":28,"column":28,"nodeType":"188","messageId":"189","endLine":28,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":29,"column":24,"nodeType":"188","messageId":"189","endLine":29,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":29,"column":29,"nodeType":"188","messageId":"189","endLine":29,"endColumn":30},{"ruleId":"149","severity":1,"message":"190","line":11,"column":21,"nodeType":"151","messageId":"152","endLine":11,"endColumn":27},{"ruleId":"145","severity":1,"message":"191","line":17,"column":6,"nodeType":"147","endLine":17,"endColumn":8,"suggestions":"192"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStreamInfoDispatch', 'getStreamingDispatch', and 'roomid'. Either include them or remove the dependency array.","ArrayExpression",["193"],"@typescript-eslint/no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'MAX_DANMU_COUNT' is assigned a value but never used.","Assignments to the 'barrageTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'start' is assigned a value but never used.","Assignments to the 'start' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'clearBarrage' is defined but never used.","React Hook useEffect has a missing dependency: 'isLive'. Either include it or remove the dependency array.",["194"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"React Hook useEffect has missing dependencies: 'banners.length', 'getBannerListDispatch', 'getRecommendListDispatch', and 'recommendList.length'. Either include them or remove the dependency array.",["197"],["195"],["196"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getLiveListDispatch' and 'liveList.length'. Either include them or remove the dependency array.",["198"],["195"],["196"],["195"],["196"],"'IconArrowUp' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'tenThousand' is defined but never used.","React Hook useEffect has missing dependencies: 'getUpInfoDispatch' and 'mid'. Either include them or remove the dependency array.",["199"],"no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator","'region' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRegionDispatch' and 'rid'. Either include them or remove the dependency array.",["200"],{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [getStreamInfoDispatch, getStreamingDispatch, roomid]",{"range":"213","text":"214"},"Update the dependencies array to be: [isLive, playerUrl]",{"range":"215","text":"216"},"Update the dependencies array to be: [banners.length, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",{"range":"217","text":"218"},"Update the dependencies array to be: [getLiveListDispatch, liveList.length]",{"range":"219","text":"220"},"Update the dependencies array to be: [getUpInfoDispatch, mid]",{"range":"221","text":"222"},"Update the dependencies array to be: [getRegionDispatch, rid]",{"range":"223","text":"224"},[571,573],"[getStreamInfoDispatch, getStreamingDispatch, roomid]",[3679,3690],"[isLive, playerUrl]",[645,647],"[banners.length, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",[502,504],"[getLiveListDispatch, liveList.length]",[487,489],"[getUpInfoDispatch, mid]",[475,477],"[getRegionDispatch, rid]"]