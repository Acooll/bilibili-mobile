[{"D:\\react\\bilibili\\src\\index.tsx":"1","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx":"2","D:\\react\\bilibili\\src\\store\\index.ts":"3","D:\\react\\bilibili\\src\\pages\\Index\\index.tsx":"4","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx":"5","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx":"6","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx":"7","D:\\react\\bilibili\\src\\store\\reducers.ts":"8","D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx":"9","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx":"10","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx":"11","D:\\react\\bilibili\\src\\components\\Avatar.tsx":"12","D:\\react\\bilibili\\src\\components\\Comments\\index.tsx":"13","D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts":"14","D:\\react\\bilibili\\src\\api\\index.ts":"15","D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx":"16","D:\\react\\bilibili\\src\\App.tsx":"17","D:\\react\\bilibili\\src\\components\\Logo.tsx":"18","D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx":"19","D:\\react\\bilibili\\src\\components\\Header\\index.tsx":"20","D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx":"21","D:\\react\\bilibili\\src\\api\\axios.ts":"22","D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx":"23","D:\\react\\bilibili\\src\\pages\\Live\\index.tsx":"24","D:\\react\\bilibili\\src\\pages\\My\\index.tsx":"25","D:\\react\\bilibili\\src\\store\\actions.ts":"26","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx":"27","D:\\react\\bilibili\\src\\util\\index.ts":"28","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx":"29","D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx":"30","D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx":"31","D:\\react\\bilibili\\src\\components\\RankList\\index.tsx":"32","D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx":"33","D:\\react\\bilibili\\src\\components\\Loading\\index.tsx":"34"},{"size":221,"mtime":1609244241164,"results":"35","hashOfConfig":"36"},{"size":3814,"mtime":1610028976773,"results":"37","hashOfConfig":"36"},{"size":256,"mtime":1609325772460,"results":"38","hashOfConfig":"36"},{"size":1664,"mtime":1610360373007,"results":"39","hashOfConfig":"36"},{"size":4877,"mtime":1610359991067,"results":"40","hashOfConfig":"36"},{"size":1162,"mtime":1610360568253,"results":"41","hashOfConfig":"36"},{"size":4407,"mtime":1610360208890,"results":"42","hashOfConfig":"36"},{"size":5416,"mtime":1610103770757,"results":"43","hashOfConfig":"36"},{"size":1472,"mtime":1610360878373,"results":"44","hashOfConfig":"36"},{"size":9425,"mtime":1610360667614,"results":"45","hashOfConfig":"36"},{"size":2423,"mtime":1610360056688,"results":"46","hashOfConfig":"36"},{"size":1978,"mtime":1609690833486,"results":"47","hashOfConfig":"36"},{"size":1810,"mtime":1610037442220,"results":"48","hashOfConfig":"36"},{"size":7550,"mtime":1609854452958,"results":"49","hashOfConfig":"36"},{"size":2690,"mtime":1610103521186,"results":"50","hashOfConfig":"36"},{"size":4159,"mtime":1610360233386,"results":"51","hashOfConfig":"36"},{"size":1439,"mtime":1610251741436,"results":"52","hashOfConfig":"36"},{"size":7774,"mtime":1609247415108,"results":"53","hashOfConfig":"36"},{"size":1395,"mtime":1610252160485,"results":"54","hashOfConfig":"36"},{"size":672,"mtime":1610024029784,"results":"55","hashOfConfig":"36"},{"size":5093,"mtime":1610360166241,"results":"56","hashOfConfig":"36"},{"size":992,"mtime":1610018169037,"results":"57","hashOfConfig":"36"},{"size":1585,"mtime":1609944034402,"results":"58","hashOfConfig":"36"},{"size":1466,"mtime":1610360311150,"results":"59","hashOfConfig":"36"},{"size":2202,"mtime":1610028908296,"results":"60","hashOfConfig":"36"},{"size":8822,"mtime":1610103687433,"results":"61","hashOfConfig":"36"},{"size":2784,"mtime":1610360703881,"results":"62","hashOfConfig":"36"},{"size":1455,"mtime":1610282665866,"results":"63","hashOfConfig":"36"},{"size":2532,"mtime":1610359708980,"results":"64","hashOfConfig":"36"},{"size":1851,"mtime":1610252686785,"results":"65","hashOfConfig":"36"},{"size":2564,"mtime":1610360138438,"results":"66","hashOfConfig":"36"},{"size":2135,"mtime":1610025494737,"results":"67","hashOfConfig":"36"},{"size":2497,"mtime":1610360413084,"results":"68","hashOfConfig":"36"},{"size":1538,"mtime":1610095756969,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"x6upha",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"D:\\react\\bilibili\\src\\index.tsx",[],["146","147"],"D:\\react\\bilibili\\src\\pages\\Search\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\index.ts",[],["148","149"],"D:\\react\\bilibili\\src\\pages\\Index\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\Space\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx",[],["150","151"],"D:\\react\\bilibili\\src\\store\\reducers.ts",[],["152","153"],"D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx",["154","155"],"import { useEffect, useRef, useState } from 'react'\r\nimport './style.styl'\r\nimport * as Hls from \"hls.js\";\r\nimport IconPlay from '../../assets/tv-play.png'\r\nimport IconPause from '../../assets/tv-pause.png'\r\nimport IconBarrageOn from '../../assets/barrage-on.png'\r\nimport IconBarrageOff from '../../assets/barrage-off.png'\r\nimport IconFullScreen from '../../assets/fullscreen.png'\r\nimport { debounce } from '../../util'\r\n\r\n\r\n\r\nconst VideoPlayer = (props) => {\r\n\r\n  const { playerUrl, isLive, closePic, danmu } = props\r\n  const videoRef = useRef(null)\r\n  const playerRef = useRef(null)\r\n  const danmuRef = useRef(null)\r\n  const controlRef = useRef(null)\r\n  const bottomControlRef = useRef(null)\r\n  const barRef = useRef(null)\r\n  const dotRef = useRef(null)\r\n  const [playing, setPlaying] = useState(false)\r\n  const [barrageOn, setBarrageOn] = useState(false)\r\n  let barrageTimer\r\n  let time\r\n  let timer\r\n\r\n  const domPool: any[] = []\r\n  let danmuPool: any[] = []\r\n \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBarrageOn(Boolean(Number(window.localStorage.getItem('barrageOn'))))\r\n    if (barrageOn && playing) {\r\n      init()\r\n      // eslint-disable-next-line\r\n      barrageTimer = setInterval(() => {\r\n        if (domPool.length) {\r\n          let dom = domPool.shift()\r\n          danmuPool.shift()\r\n          // console.log('im send', domPool, dom);\r\n          sendDanmu(dom)\r\n        } else {\r\n          init()\r\n        }\r\n      }, 300)\r\n    }\r\n    return () => clearInterval(barrageTimer)\r\n\r\n  }, [barrageOn, playing, domPool])\r\n\r\n\r\n\r\n  const init = () => {\r\n    // console.log(danmu, 889)\r\n    let dom = document.querySelectorAll('.danmu')\r\n    if (dom.length) {\r\n      for (let i = 0; i < dom.length; i++) {\r\n        dom[i].addEventListener('transitionend', () => {\r\n          dom[i].remove()\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!isLive) {\r\n      const indexs: any[] = []\r\n      danmu.forEach((item, i) => {\r\n        if (parseInt(item.time, 10) === parseInt((videoRef as any).current.currentTime, 10)) {\r\n          danmuPool.push(item)\r\n          indexs.push(i)\r\n        }\r\n      })\r\n      indexs.forEach((index, i) => {\r\n        danmu.splice(index - i, 1)\r\n      })\r\n    } else {\r\n      danmuPool = danmu\r\n      // console.log(danmuPool, 121121, danmu)\r\n    }\r\n    if (danmuPool.length) {\r\n      // console.log(56511111111111111111111)\r\n      for (let i = 0; i < danmuPool.length; i++) {\r\n        let div = document.createElement('div')\r\n        div.className = 'danmu'\r\n        isLive ? div.innerHTML = danmuPool[0].info[1] : div.innerHTML = danmuPool[i].content;\r\n        isLive ? div.style.color = \"#\" + Number(danmuPool[0].info[0][3]).toString(16) : div.style.color = \"#\" + Number(danmuPool[i].decimalColor).toString(16)\r\n        div.style.position = 'absolute'\r\n        div.style.top = `${Math.random() * 30}vw`\r\n        div.style.marginLeft = '100vw'\r\n        div.style.overflow = 'hidden'\r\n        div.style.whiteSpace = 'nowrap'\r\n        div.style.width = 'mint-width';\r\n        (danmuRef as any).current.append(div);\r\n        domPool.push(div)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const toggleSend = (e) => {\r\n    e.stopPropagation()\r\n    if (barrageOn) {\r\n      setBarrageOn(false)\r\n      window.localStorage.setItem('barrageOn', '0')\r\n    } else {\r\n      setBarrageOn(true)\r\n      window.localStorage.setItem('barrageOn', '1')\r\n    }\r\n  }\r\n\r\n  const sendDanmu = (dom) => {\r\n    const x = dom.offsetLeft + dom.clientWidth\r\n    dom.style.transform = `translateX(${-x}px)`\r\n    if (isLive) {\r\n      dom.style.transition = `all 5s linear`\r\n    } else {\r\n      dom.style.transition = `all ${Math.round(1500 / x)}s linear`\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (bottomControlRef as any).current.style.display = 'none';\r\n    let dom = videoRef.current;\r\n\r\n\r\n    if (isLive && playerUrl.length) {\r\n      const videoDom = videoRef.current\r\n      const videoSrc = playerUrl[3].url\r\n      if ((videoDom as any).canPlayType('application/vnd.apple.mpegurl')) {\r\n        (videoDom as any).src = videoSrc;\r\n      } else if ((Hls as any).isSupported()) {\r\n        var hls = new (Hls as any)();\r\n        hls.loadSource(videoSrc);\r\n        hls.attachMedia(videoDom);\r\n\r\n        (videoDom as any).addEventListener('canplay', () => {\r\n          (videoDom as any).play()\r\n          setPlaying(true)\r\n          // setTimeout(() => {\r\n          //   (controlRef as any).current.style.display = 'none'\r\n          // }, 3000)\r\n        })\r\n\r\n      }\r\n    } else if (playerUrl.length) {\r\n      (dom as any).addEventListener('timeupdate', handleUpdate)\r\n      initVideo()\r\n    }\r\n\r\n    return () => (dom as any).removeEventListener('timeupdate', handleUpdate)\r\n\r\n  }, [playerUrl])\r\n\r\n\r\n  const handleUpdate = () => {\r\n    const bar = barRef.current;\r\n    const dot = dotRef.current;\r\n    const progress = ((videoRef as any).current.currentTime * 1000) / playerUrl.length * 100;\r\n    (bar as any).style.width = `${progress}%`;\r\n    (dot as any).style.marginLeft = `${progress / 2.22}vw`;\r\n\r\n  }\r\n\r\n\r\n  const initVideo = () => {\r\n    const bar = barRef.current;\r\n    const dot = dotRef.current;\r\n    const video = videoRef.current;\r\n    // (videoRef as any).current.addEventListener('timeupdate', () => {\r\n    //   const progress = ((videoRef as any).current.currentTime * 1000) / playerUrl.length * 100;\r\n    //   (bar as any).style.width = `${progress}%`;\r\n    //   (dot as any).style.marginLeft = `${progress / 2.22}vw`;\r\n\r\n    // });\r\n\r\n    /**\r\n      * 进度条事件\r\n      */\r\n    // 总进度条宽度\r\n    let width = 0;\r\n    // 距离屏幕左边距离\r\n    let left = 0;\r\n    // 拖拽进度比例\r\n    let rate = 0;\r\n    (dotRef as any).current.addEventListener('touchstart', (e) => {\r\n      e.stopPropagation()\r\n      const parentDOM = (dot as any).parentElement;\r\n      width = parentDOM.offsetWidth;\r\n      left = parentDOM.getBoundingClientRect().left;\r\n      (video as any).pause()\r\n    });\r\n\r\n\r\n    (video as any).addEventListener('ended', () => {\r\n      (video as any).currentTime = 0;\r\n      (video as any).pause();\r\n      setPlaying(false)\r\n    });\r\n\r\n    (dotRef as any).current.addEventListener('touchmove', (e) => {\r\n      e.preventDefault()\r\n      const touch = e.touches[0];\r\n      // 计算拖拽进度比例\r\n      rate = (touch.clientX - left) / width;\r\n      if (rate > 1) {\r\n        rate = 1;\r\n      } else if (rate < 0) {\r\n        rate = 0;\r\n      }\r\n      // const currentTime = (video as any).duration * rate;\r\n      (dot as any).style.marginLeft = `${rate * 100}%`;\r\n      (bar as any).style.width = `${rate * 100}%`;\r\n    });\r\n    (dotRef as any).current.addEventListener(\"touchend\", () => {\r\n      (video as any).currentTime = (video as any).duration * rate;\r\n\r\n      (video as any).play()\r\n    });\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let dom = playerRef.current;\r\n    if (playerUrl) {\r\n      (dom as any).addEventListener('click', handleChangePlay)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(time)\r\n    }\r\n  }, [playerUrl, playing])\r\n\r\n  // const handleClear = () =>{\r\n  //   clearTimeout(time)\r\n  // }\r\n\r\n  const handleChangePlay = (e) => {\r\n    clearTimeout(time)\r\n    e.stopPropagation();\r\n    const videoDom = videoRef.current;\r\n\r\n    if (playing) {\r\n      console.log('false')\r\n      setPlaying(false);\r\n      (videoDom as any).pause();\r\n\r\n    } else {\r\n      (bottomControlRef as any).current.style.display = 'block';\r\n      if (!isLive) {\r\n        closePic(true)\r\n      }\r\n      // time = setTimeout(() => {\r\n      //   (controlRef as any).current.style.display = 'none'\r\n      // }, 5000)\r\n      setPlaying(true);\r\n      (videoDom as any).play()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const toggleShowControls = () => {\r\n    clearTimeout(timer)\r\n    if ((controlRef as any).current.style.display === 'none') {\r\n      (controlRef as any).current.style.display = 'block'\r\n      // timer = setTimeout(() => {\r\n      //   if (playing) {\r\n      //     (controlRef as any).current.style.display = 'none'\r\n      //   }\r\n      // }, 5000)\r\n    } else {\r\n      (controlRef as any).current.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n\r\n  //   return () => clearTimeout(timer)\r\n  // }, [playing])\r\n\r\n  return (\r\n    <div className='video_wrapper' >\r\n      <div className='videoContainer' onClick={debounce(toggleShowControls, 200)}>\r\n        <div className='danmuContainer' ref={danmuRef}></div>\r\n        <video\r\n          src={isLive ? '' : playerUrl.url}\r\n          ref={videoRef} height=\"100%\" width=\"100%\" preload=\"auto\"\r\n          x5-playsinline=\"true\"\r\n          webkit-playsinline=\"true\"\r\n        />\r\n        <div className='control' ref={controlRef}>\r\n          <img className='control-play' src={playing ? IconPause : IconPlay} ref={playerRef} alt=\"\" />\r\n          <div className='bottom-control' ref={bottomControlRef} >\r\n\r\n            {\r\n              isLive ? null :\r\n                <div className='barContainer' >\r\n                  <div className='barDot' ref={dotRef}  >\r\n                  </div>\r\n                  <div className='allBar'>\r\n                    <div className='activeBar' ref={barRef}></div>\r\n                  </div>\r\n                </div>\r\n            }\r\n\r\n            <img onClick={toggleSend} className='icon-barrage' src={barrageOn ? IconBarrageOn : IconBarrageOff} alt=\"\" />\r\n            <img className='icon-fullscreen' src={IconFullScreen} alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default VideoPlayer","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\Avatar.tsx",[],["156","157"],"D:\\react\\bilibili\\src\\components\\Comments\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts",[],"D:\\react\\bilibili\\src\\api\\index.ts",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx",[],["158","159"],"D:\\react\\bilibili\\src\\App.tsx",[],"D:\\react\\bilibili\\src\\components\\Logo.tsx",[],"D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\Header\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx",[],"D:\\react\\bilibili\\src\\api\\axios.ts",[],"D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\Live\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\My\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\actions.ts",[],"D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx",[],"D:\\react\\bilibili\\src\\util\\index.ts",[],"D:\\react\\bilibili\\src\\pages\\Video\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx",[],["160","161"],"D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\RankList\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\Loading\\index.tsx",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"162","replacedBy":"168"},{"ruleId":"164","replacedBy":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"164","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":160,"column":6,"nodeType":"174","endLine":160,"endColumn":17,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":240,"column":6,"nodeType":"174","endLine":240,"endColumn":26,"suggestions":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"162","replacedBy":"180"},{"ruleId":"164","replacedBy":"181"},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],["184"],["185"],["184"],["185"],["184"],["185"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleUpdate' and 'isLive'. Either include them or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has missing dependencies: 'handleChangePlay' and 'time'. Either include them or remove the dependency array.",["187"],["184"],["185"],["184"],["185"],["184"],["185"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [handleUpdate, isLive, playerUrl]",{"range":"192","text":"193"},"Update the dependencies array to be: [handleChangePlay, playerUrl, playing, time]",{"range":"194","text":"195"},[4655,4666],"[handleUpdate, isLive, playerUrl]",[6876,6896],"[handleChangePlay, playerUrl, playing, time]"]