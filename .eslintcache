[{"D:\\react\\bilibili\\src\\index.tsx":"1","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx":"2","D:\\react\\bilibili\\src\\store\\index.ts":"3","D:\\react\\bilibili\\src\\pages\\Index\\index.tsx":"4","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx":"5","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx":"6","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx":"7","D:\\react\\bilibili\\src\\store\\reducers.ts":"8","D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx":"9","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx":"10","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx":"11","D:\\react\\bilibili\\src\\components\\Avatar.tsx":"12","D:\\react\\bilibili\\src\\components\\Comments\\index.tsx":"13","D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts":"14","D:\\react\\bilibili\\src\\api\\index.ts":"15","D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx":"16","D:\\react\\bilibili\\src\\App.tsx":"17","D:\\react\\bilibili\\src\\components\\Logo.tsx":"18","D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx":"19","D:\\react\\bilibili\\src\\components\\Header\\index.tsx":"20","D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx":"21","D:\\react\\bilibili\\src\\api\\axios.ts":"22","D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx":"23","D:\\react\\bilibili\\src\\pages\\Live\\index.tsx":"24","D:\\react\\bilibili\\src\\pages\\My\\index.tsx":"25","D:\\react\\bilibili\\src\\store\\actions.ts":"26","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx":"27","D:\\react\\bilibili\\src\\util\\index.ts":"28","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx":"29","D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx":"30","D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx":"31","D:\\react\\bilibili\\src\\components\\RankList\\index.tsx":"32","D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx":"33","D:\\react\\bilibili\\src\\components\\Loading\\index.tsx":"34"},{"size":221,"mtime":1609244241164,"results":"35","hashOfConfig":"36"},{"size":3814,"mtime":1610028976773,"results":"37","hashOfConfig":"36"},{"size":256,"mtime":1609325772460,"results":"38","hashOfConfig":"36"},{"size":1596,"mtime":1610097071986,"results":"39","hashOfConfig":"36"},{"size":4851,"mtime":1610100146375,"results":"40","hashOfConfig":"36"},{"size":1282,"mtime":1610028697324,"results":"41","hashOfConfig":"36"},{"size":3456,"mtime":1610107272843,"results":"42","hashOfConfig":"36"},{"size":5416,"mtime":1610103770757,"results":"43","hashOfConfig":"36"},{"size":1465,"mtime":1610022139052,"results":"44","hashOfConfig":"36"},{"size":9704,"mtime":1610102558039,"results":"45","hashOfConfig":"36"},{"size":1781,"mtime":1610107829495,"results":"46","hashOfConfig":"36"},{"size":1978,"mtime":1609690833486,"results":"47","hashOfConfig":"36"},{"size":1810,"mtime":1610037442220,"results":"48","hashOfConfig":"36"},{"size":7550,"mtime":1609854452958,"results":"49","hashOfConfig":"36"},{"size":2690,"mtime":1610103521186,"results":"50","hashOfConfig":"36"},{"size":4222,"mtime":1610028791853,"results":"51","hashOfConfig":"36"},{"size":1403,"mtime":1610027933171,"results":"52","hashOfConfig":"36"},{"size":7774,"mtime":1609247415108,"results":"53","hashOfConfig":"36"},{"size":871,"mtime":1610021625755,"results":"54","hashOfConfig":"36"},{"size":672,"mtime":1610024029784,"results":"55","hashOfConfig":"36"},{"size":5077,"mtime":1610097974366,"results":"56","hashOfConfig":"36"},{"size":992,"mtime":1610018169037,"results":"57","hashOfConfig":"36"},{"size":1585,"mtime":1609944034402,"results":"58","hashOfConfig":"36"},{"size":1448,"mtime":1610107626421,"results":"59","hashOfConfig":"36"},{"size":2202,"mtime":1610028908296,"results":"60","hashOfConfig":"36"},{"size":8822,"mtime":1610103687433,"results":"61","hashOfConfig":"36"},{"size":2770,"mtime":1609587215987,"results":"62","hashOfConfig":"36"},{"size":1729,"mtime":1609833575145,"results":"63","hashOfConfig":"36"},{"size":2582,"mtime":1610029061668,"results":"64","hashOfConfig":"36"},{"size":1203,"mtime":1610021757375,"results":"65","hashOfConfig":"36"},{"size":1320,"mtime":1610095962239,"results":"66","hashOfConfig":"36"},{"size":2135,"mtime":1610025494737,"results":"67","hashOfConfig":"36"},{"size":2539,"mtime":1610025795388,"results":"68","hashOfConfig":"36"},{"size":1538,"mtime":1610095756969,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"x6upha",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\bilibili\\src\\index.tsx",[],["155","156"],"D:\\react\\bilibili\\src\\pages\\Search\\index.tsx",[],["157","158"],"D:\\react\\bilibili\\src\\store\\index.ts",[],["159","160"],"D:\\react\\bilibili\\src\\pages\\Index\\index.tsx",["161"],"import React, { useEffect } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport Swiper from '../../components/Swiper/index'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\nimport Recommend from '../../components/Recommend'\r\nimport MenuBar from '../../components/MenuBar'\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loading from '../../components/Loading'\r\n\r\nconst Index = (props) => {\r\n  const { getBannerListDispatch, banners, recommendList, getRecommendListDispatch, loading } = props\r\n  useEffect(() => {\r\n    if (!banners) {\r\n      getBannerListDispatch()\r\n    }\r\n    if (!recommendList.length) {\r\n      getRecommendListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~</title>\r\n      </Helmet>\r\n      <Header />\r\n      <MenuBar history={props.history} chooseId={0} />\r\n      <div className='swiper_container'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <div className='recommend'>\r\n        {\r\n          loading ? <Loading /> : null\r\n        }\r\n        <Recommend recommendList={recommendList} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getBannerListDispatch() {\r\n        dispatch(actionTypes.getBannerList())\r\n      },\r\n      getRecommendListDispatch() {\r\n        dispatch(actionTypes.getRecommendList())\r\n      },\r\n    };\r\n  }\r\n)(Index);\r\n","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx",["162","163","164"],"D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx",["165","166","167"],"import React, { useEffect } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport {Helmet} from 'react-helmet'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MenuBar from '../../components/MenuBar'\r\nimport ChannelList from '../../components/ChannelList'\r\nimport ChatList from '../../components/ChatList';\r\n\r\nconst Channel = (props) => {\r\n  const { location, region, getRegionDispatch, history } = props\r\n  const rid = location.search.match(/\\d+/)\r\n\r\n  useEffect(() => {\r\n    console.log(321)\r\n    getRegionDispatch(rid)\r\n  }, [Number(rid)])\r\n\r\n  // const fetchData = (props) =>{\r\n  //   console.log(333)\r\n  //   getRegionDispatch(rid)\r\n  // }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Helmet>\r\n        <title>频道</title>\r\n      </Helmet>\r\n      <Header />\r\n      <MenuBar history={history} chooseId={Number(rid)} />\r\n      <ChannelList region={region} history={history} rid={rid} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getRegionDispatch(props) {\r\n        dispatch(actionTypes.fetchRegion(props))\r\n      },\r\n    };\r\n  }\r\n)(Channel);\r\n","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx",["168","169"],"D:\\react\\bilibili\\src\\store\\reducers.ts",[],"D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx",["170"],"import React, { useState, useEffect } from 'react'\r\nimport \"swiper/dist/css/swiper.css\"\r\nimport Swiper from 'swiper'\r\nimport './style.styl'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst Slider = (props) => {\r\n  const [sliderSwiper, setSliderSwiper] = useState(null)\r\n\r\n  const { bannerList } = props\r\n\r\n  useEffect(() => {\r\n    if (bannerList && !sliderSwiper) {\r\n      let sliderSwiper = new Swiper(\".slider-container\", {\r\n        loop: true,\r\n        autoplay: {\r\n          delay: 3000,\r\n          disableOnInteraction: false,\r\n        },\r\n        pagination: { el: '.swiper-pagination' },\r\n      });\r\n      setSliderSwiper(sliderSwiper);\r\n    }\r\n  }, [bannerList, sliderSwiper])\r\n\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <div className=\"swiper-wrapper\">\r\n        {bannerList ?\r\n          bannerList.map((slider, i) => {\r\n            return (\r\n              <div className=\"swiper-slide\" key={slider.id}>\r\n                <div className=\"slider-nav\">\r\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\" />}>\r\n                    <img src={slider.pic} width=\"100%\" height=\"100%\" />\r\n                  </LazyLoad>\r\n                </div>\r\n              </div>\r\n            )\r\n          }) : null\r\n        }\r\n\r\n      </div>\r\n      <div className=\"swiper-pagination\"></div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Slider",["171","172"],"D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx",["173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './style.styl'\r\nimport ReactPlayer from 'react-player'\r\nimport * as Hls from \"hls.js\";\r\nimport IconPlay from '../../assets/tv-play.png'\r\nimport IconPause from '../../assets/tv-pause.png'\r\nimport IconBarrageOn from '../../assets/barrage-on.png'\r\nimport IconBarrageOff from '../../assets/barrage-off.png'\r\nimport IconFullScreen from '../../assets/fullscreen.png'\r\nimport BarDot from '../../components/BarDot'\r\nimport { debounce, throttle } from '../../util'\r\nimport { setPlayerDetail } from '../../store/actions';\r\n\r\n\r\nconst VideoPlayer = (props) => {\r\n\r\n  const { playerUrl, isLive, closePic, danmu } = props\r\n  const videoRef = useRef(null)\r\n  const playerRef = useRef(null)\r\n  const danmuRef = useRef(null)\r\n  const controlRef = useRef(null)\r\n  const bottomControlRef = useRef(null)\r\n  const barRef = useRef(null)\r\n  const dotRef = useRef(null)\r\n  const [playing, setPlaying] = useState(false)\r\n  const [showControls, setShowControls] = useState(false)\r\n  const [barrageOn, setBarrageOn] = useState(false)\r\n  let barrageTimer\r\n  let time\r\n  let timer\r\n\r\n  const domPool: any[] = []\r\n  let danmuPool: any[] = []\r\n  const MAX_DANMU_COUNT = 6\r\n  let start = 0\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBarrageOn(Boolean(Number(window.localStorage.getItem('barrageOn'))))\r\n    if (barrageOn && playing) {\r\n      init()\r\n      barrageTimer = setInterval(() => {\r\n        if (domPool.length) {\r\n          let dom = domPool.shift()\r\n          danmuPool.shift()\r\n          // console.log('im send', domPool, dom);\r\n          sendDanmu(dom)\r\n        } else {\r\n          // console.log('again')\r\n          start += 6\r\n          init()\r\n        }\r\n      }, 300)\r\n    }\r\n    return () => clearInterval(barrageTimer)\r\n\r\n  }, [barrageOn, playing, domPool])\r\n\r\n\r\n\r\n  const init = () => {\r\n    // console.log(danmu, 889)\r\n    let dom = document.querySelectorAll('.danmu')\r\n    if (dom.length) {\r\n      for (let i = 0; i < dom.length; i++) {\r\n        dom[i].addEventListener('transitionend', () => {\r\n          dom[i].remove()\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!isLive) {\r\n      const indexs: any[] = []\r\n      danmu.forEach((item, i) => {\r\n        if (parseInt(item.time, 10) === parseInt((videoRef as any).current.currentTime, 10)) {\r\n          danmuPool.push(item)\r\n          indexs.push(i)\r\n        }\r\n      })\r\n      indexs.forEach((index, i) => {\r\n        danmu.splice(index - i, 1)\r\n      })\r\n    } else {\r\n      danmuPool = danmu\r\n      // console.log(danmuPool, 121121, danmu)\r\n    }\r\n    if (danmuPool.length) {\r\n      // console.log(56511111111111111111111)\r\n      for (let i = 0; i < danmuPool.length; i++) {\r\n        let div = document.createElement('div')\r\n        div.className = 'danmu'\r\n        isLive ? div.innerHTML = danmuPool[0].info[1] : div.innerHTML = danmuPool[i].content;\r\n        isLive ? div.style.color = \"#\" + Number(danmuPool[0].info[0][3]).toString(16) : div.style.color = \"#\" + Number(danmuPool[i].decimalColor).toString(16)\r\n        div.style.position = 'absolute'\r\n        div.style.top = `${Math.random() * 30}vw`\r\n        div.style.marginLeft = '100vw'\r\n        div.style.overflow = 'hidden'\r\n        div.style.whiteSpace = 'nowrap'\r\n        div.style.width = 'mint-width';\r\n        (danmuRef as any).current.append(div);\r\n        domPool.push(div)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const toggleSend = (e) => {\r\n    e.stopPropagation()\r\n    if (barrageOn) {\r\n      setBarrageOn(false)\r\n      window.localStorage.setItem('barrageOn','0')\r\n    } else {\r\n      setBarrageOn(true)\r\n      window.localStorage.setItem('barrageOn','1')\r\n    }\r\n  }\r\n\r\n  const sendDanmu = (dom) => {\r\n    const x = dom.offsetLeft + dom.clientWidth\r\n    dom.style.transform = `translateX(${-x}px)`\r\n    if (isLive) {\r\n      dom.style.transition = `all 5s linear`\r\n    } else {\r\n      dom.style.transition = `all ${Math.round(1500 / x)}s linear`\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (bottomControlRef as any).current.style.display = 'none';\r\n    let dom = videoRef.current;\r\n\r\n\r\n    if (isLive && playerUrl.length) {\r\n      const videoDom = videoRef.current\r\n      const videoSrc = playerUrl[3].url\r\n      if ((videoDom as any).canPlayType('application/vnd.apple.mpegurl')) {\r\n        (videoDom as any).src = videoSrc;\r\n      } else if ((Hls as any).isSupported()) {\r\n        var hls = new (Hls as any)();\r\n        hls.loadSource(videoSrc);\r\n        hls.attachMedia(videoDom);\r\n\r\n        (videoDom as any).addEventListener('canplay', () => {\r\n          (videoDom as any).play()\r\n          setPlaying(true)\r\n          // setTimeout(() => {\r\n          //   (controlRef as any).current.style.display = 'none'\r\n          // }, 3000)\r\n        })\r\n\r\n      }\r\n    } else if (playerUrl.length) {\r\n      (dom as any).addEventListener('timeupdate', handleUpdate)\r\n      initVideo()\r\n    }\r\n\r\n    return () => (dom as any).removeEventListener('timeupdate', handleUpdate)\r\n\r\n  }, [playerUrl])\r\n\r\n\r\n  const handleUpdate = () => {\r\n    const bar = barRef.current;\r\n    const dot = dotRef.current;\r\n    const progress = ((videoRef as any).current.currentTime * 1000) / playerUrl.length * 100;\r\n    (bar as any).style.width = `${progress}%`;\r\n    (dot as any).style.marginLeft = `${progress / 2.22}vw`;\r\n\r\n  }\r\n\r\n\r\n  const initVideo = () => {\r\n    const bar = barRef.current;\r\n    const dot = dotRef.current;\r\n    const video = videoRef.current;\r\n    // (videoRef as any).current.addEventListener('timeupdate', () => {\r\n    //   const progress = ((videoRef as any).current.currentTime * 1000) / playerUrl.length * 100;\r\n    //   (bar as any).style.width = `${progress}%`;\r\n    //   (dot as any).style.marginLeft = `${progress / 2.22}vw`;\r\n\r\n    // });\r\n\r\n    /**\r\n      * 进度条事件\r\n      */\r\n    // 总进度条宽度\r\n    let width = 0;\r\n    // 距离屏幕左边距离\r\n    let left = 0;\r\n    // 拖拽进度比例\r\n    let rate = 0;\r\n    (dotRef as any).current.addEventListener('touchstart', (e) => {\r\n      e.stopPropagation()\r\n      const parentDOM = (dot as any).parentElement;\r\n      width = parentDOM.offsetWidth;\r\n      left = parentDOM.getBoundingClientRect().left;\r\n      (video as any).pause()\r\n    });\r\n\r\n\r\n    (video as any).addEventListener('ended', () => {\r\n      (video as any).currentTime = 0;\r\n      (video as any).pause();\r\n      setPlaying(false)\r\n    });\r\n\r\n    (dotRef as any).current.addEventListener('touchmove', (e) => {\r\n      e.preventDefault()\r\n      const touch = e.touches[0];\r\n      // 计算拖拽进度比例\r\n      rate = (touch.clientX - left) / width;\r\n      if (rate > 1) {\r\n        rate = 1;\r\n      } else if (rate < 0) {\r\n        rate = 0;\r\n      }\r\n      // const currentTime = (video as any).duration * rate;\r\n      (dot as any).style.marginLeft = `${rate * 100}%`;\r\n      (bar as any).style.width = `${rate * 100}%`;\r\n    });\r\n    (dotRef as any).current.addEventListener(\"touchend\", () => {\r\n      (video as any).currentTime = (video as any).duration * rate;\r\n\r\n      (video as any).play()\r\n    });\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let dom = playerRef.current;\r\n    if (playerUrl) {\r\n      (dom as any).addEventListener('click', handleChangePlay)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(time)\r\n    }\r\n  }, [playerUrl, playing])\r\n\r\n  // const handleClear = () =>{\r\n  //   clearTimeout(time)\r\n  // }\r\n\r\n  const handleChangePlay = (e) => {\r\n    clearTimeout(time)\r\n    e.stopPropagation();\r\n    const videoDom = videoRef.current;\r\n\r\n    if (playing) {\r\n      console.log('false')\r\n      setPlaying(false);\r\n      (videoDom as any).pause();\r\n\r\n    } else {\r\n      (bottomControlRef as any).current.style.display = 'block';\r\n      if (!isLive) {\r\n        closePic(true)\r\n      }\r\n      // time = setTimeout(() => {\r\n      //   (controlRef as any).current.style.display = 'none'\r\n      // }, 5000)\r\n      setPlaying(true);\r\n      (videoDom as any).play()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const toggleShowControls = () => {\r\n    clearTimeout(timer)\r\n    if ((controlRef as any).current.style.display === 'none') {\r\n      (controlRef as any).current.style.display = 'block'\r\n      // timer = setTimeout(() => {\r\n      //   if (playing) {\r\n      //     (controlRef as any).current.style.display = 'none'\r\n      //   }\r\n      // }, 5000)\r\n    } else {\r\n      (controlRef as any).current.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n\r\n  //   return () => clearTimeout(timer)\r\n  // }, [playing])\r\n\r\n  return (\r\n    <div className='video_wrapper' >\r\n      <div className='videoContainer' onClick={debounce(toggleShowControls, 200)}>\r\n        <div className='danmuContainer' ref={danmuRef}></div>\r\n        <video\r\n          src={isLive ? '' : playerUrl.url}\r\n          ref={videoRef} height=\"100%\" width=\"100%\" preload=\"auto\"\r\n          x5-playsinline=\"true\"\r\n          webkit-playsinline=\"true\"\r\n        />\r\n        <div className='control' ref={controlRef}>\r\n          <img className='control-play' src={playing ? IconPause : IconPlay} ref={playerRef} alt=\"\" />\r\n          <div className='bottom-control' ref={bottomControlRef} >\r\n\r\n            {\r\n              isLive ? null :\r\n                <div className='barContainer' >\r\n                  <div className='barDot' ref={dotRef}  >\r\n                  </div>\r\n                  <div className='allBar'>\r\n                    <div className='activeBar' ref={barRef}></div>\r\n                  </div>\r\n                </div>\r\n            }\r\n\r\n            <img onClick={toggleSend} className='icon-barrage' src={barrageOn ? IconBarrageOn : IconBarrageOff} alt=\"\" />\r\n            <img className='icon-fullscreen' src={IconFullScreen} alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default VideoPlayer","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx",["185"],"D:\\react\\bilibili\\src\\components\\Avatar.tsx",[],"D:\\react\\bilibili\\src\\components\\Comments\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts",[],["186","187"],"D:\\react\\bilibili\\src\\api\\index.ts",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx",["188","189"],"D:\\react\\bilibili\\src\\App.tsx",[],"D:\\react\\bilibili\\src\\components\\Logo.tsx",[],"D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx",["190"],"import React, { useEffect } from 'react'\r\nimport './style.styl'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\n\r\nconst Recommend = (props) => {\r\n  const { recommendList } = props\r\n\r\n  return (\r\n    <div className='recommend_container'>\r\n      {\r\n        recommendList.map(item => {\r\n          return (\r\n          <a key={item.aid} href={`/video?aid=${item.aid}&bvid=${item.bvid}`}  className='recommend_item'>\r\n              <div className='item'>\r\n                <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\"/>}>\r\n                <img src={item.pic} alt=\"\" />\r\n              </LazyLoad>\r\n              </div>\r\n              <p className='title'>{item.title}</p>\r\n            </a>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Recommend","D:\\react\\bilibili\\src\\components\\Header\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx",["191"],"import React, { useEffect, useState } from 'react'\r\nimport IconHot from '../../assets/fire.png'\r\nimport './style.styl'\r\nimport IconZan from '../../assets/zan.png'\r\nimport IconStar from '../../assets/star.png'\r\nimport IconDownload from '../../assets/download.png'\r\nimport IconBan from '../../assets/ban.png'\r\nimport classnames from 'classnames'\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport { timestampToTime, tenThousand } from '../../util'\r\nimport Comments from '../../components/Comments'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst PlayerDetail = (props) => {\r\n  const { playerDetail, detailRecommend, history,comments } = props\r\n  const author = Object.assign({}, playerDetail.owner)\r\n  const stat= Object.assign({}, playerDetail.stat)\r\n\r\n  const [spread, setSpread] = useState(false)\r\n  const [selectComments, setSelectComments] = useState(false)\r\n\r\n  const toggleSpread = () => {\r\n    if (spread) {\r\n      setSpread(false)\r\n    } else {\r\n      setSpread(true)\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className='detail_container'>\r\n      <div className='player_info'   >\r\n        <div className='top_info'>\r\n          <div className='hot'>\r\n            <img src={IconHot} alt=\"\" />\r\n            <span>热门</span>\r\n          </div>\r\n          <h1 className={classnames(spread ? 'spreadTitle' : 'title')}>{playerDetail.title}</h1>\r\n          <img className={classnames('iconDown', spread ? 'spreadClass' : '')} onClick={toggleSpread} src={IconArrowDown} alt=\"\" />\r\n        </div>\r\n\r\n        {\r\n          spread ? <div className='detail_info'>\r\n            <div className='author' >\r\n              <img className='avatar' src={author.face} alt=\"\"  onClick={()=>history.push(`/space?mid=${author.mid}`)} />\r\n              <div>\r\n                <div className='author_name'>{author.name}</div>\r\n                <div className='fans'>60.5万粉丝</div>\r\n              </div>\r\n              <div className='payAttention'>+ 关注</div>\r\n            </div>\r\n            <div className='viewInfo'>\r\n              <span>{tenThousand(playerDetail.stat.view)}观看</span>\r\n              <span>{tenThousand(playerDetail.stat.danmaku)}弹幕</span>\r\n              <span>{timestampToTime(playerDetail.pubdate).substr(0, 10)}</span>\r\n            </div>\r\n            <div className='banInfo'>\r\n              <img src={IconBan} alt=\"\" />\r\n              <span>未经作者授权禁止转载</span>\r\n            </div>\r\n            <div className='authorSay'>{playerDetail.desc}</div>\r\n            <div className='left_info'>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div> :\r\n            <div className='video_tool'>\r\n              <div className='author'>\r\n                <img className='avatar' src={author.face} onClick={()=>history.push(`/space?mid=${author.mid}`)} alt=\"\" />\r\n                <div className='author_name'>{author.name}</div>\r\n              </div>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span></div>\r\n            </div>\r\n        }\r\n      </div>\r\n      <div className='recommendList'>\r\n        <div className='listBar'>\r\n          <div onClick={() => setSelectComments(false)}> <span className={selectComments ? '' : 'selected'}>相关推荐</span></div>\r\n          <div onClick={() => setSelectComments(true)}><span className={selectComments ? 'selected' : ''}>评论</span></div>\r\n        </div>\r\n        <div className={classnames('listContainer', selectComments ? 'commentsSelected' : '')} >\r\n          {\r\n            detailRecommend.map((item) => {\r\n              return (\r\n                <div key={item.aid} className='listItem' onClick={()=> history.push(`/video?aid=${item.aid}&bvid=${item.bvid}`)}>\r\n                  <div>\r\n                  <LazyLoad placeholder={<img width=\"80%\" height=\"60%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\"/>}>\r\n                    <img src={item.pic} alt=\"\" />\r\n                    </LazyLoad>\r\n                  </div>\r\n                  <div>{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {\r\n          selectComments? <Comments comments={comments} history={history} /> : null\r\n        } \r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default PlayerDetail","D:\\react\\bilibili\\src\\api\\axios.ts",[],"D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx",[],["192","193"],"D:\\react\\bilibili\\src\\pages\\Live\\index.tsx",["194","195"],"D:\\react\\bilibili\\src\\pages\\My\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\actions.ts",[],"D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx",["196","197"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\n\r\nimport './style.styl'\r\n\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport IconArrowUp from '../../assets/arrow_up.png'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst menuList = [\r\n  { \"tid\": 0, \"typename\": \"首页\" },\r\n  { \"tid\": 1, \"typename\": \"动画\" },\r\n  { \"tid\": 13, \"typename\": \"番剧\" },\r\n  { \"tid\": 168, \"typename\": \"国创\" },\r\n  { \"tid\": 3, \"typename\": \"音乐\" },\r\n  { \"tid\": 129, \"typename\": \"舞蹈\" },\r\n  { \"tid\": 4, \"typename\": \"游戏\" }, {\r\n    \"tid\": 36, \"typename\": \"科技\"\r\n  },\r\n  { \"tid\": 188, \"typename\": \"数码\" },\r\n  { \"tid\": 160, \"typename\": \"生活\" },\r\n  { \"tid\": 119, \"typename\": \"鬼畜\" },\r\n  { \"tid\": 155, \"typename\": \"时尚\" },\r\n  { \"tid\": 5, \"typename\": \"娱乐\" },\r\n  { \"tid\": 181, \"typename\": \"影视\" },\r\n  { \"tid\": 177, \"typename\": \"纪录片\" },\r\n  { \"tid\": 23, \"typename\": \"电影\" },\r\n  // { \"tid\": 11, \"typename\": \"电视剧\" },\r\n  { \"tid\": 999, \"typename\": \"直播\" }\r\n]\r\n\r\n\r\n\r\nconst MenuBar = (props) => {\r\n  const { typeList, history, chooseId, fetchData } = props\r\n  const [chooseBar, setChooseBar] = useState(0)\r\n\r\n  const barRef = useRef(null)\r\n\r\n  console.log(typeList)\r\n  const [showBox, setShowBox] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setChooseBar(chooseId)\r\n  }, [chooseId])\r\n\r\n  const selectRegion = (e) => {\r\n    if (e === 0) {\r\n      history.push('/index')\r\n    } else {\r\n      if (e === 999) {\r\n        history.push('/lives')\r\n      } else {\r\n        if (fetchData !== undefined) {\r\n          fetchData(true)\r\n        }\r\n        history.push(`/channel?tid=${e}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='bar_container'>\r\n\r\n      <div className='menu_bar'>\r\n        <div className='menu' ref={barRef}>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}>\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='arrow'>\r\n          <img src={IconArrowDown} onClick={() => setShowBox(true)} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('wrapper', showBox ? 'showWrapper' : '')}>\r\n        <div className='wrapper_box'>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}\r\n            >\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img className='icon_up' src={IconArrowUp} onClick={() => setShowBox(false)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MenuBar",["198","199"],"D:\\react\\bilibili\\src\\util\\index.ts",["200","201","202","203","204","205","206"],"//时间戳转换日期\r\n\r\nexport function timestampToTime(timestamp) {\r\n  var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n  var Y = date.getFullYear() + '-';\r\n  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n  var D = date.getDate() + ' ';\r\n  var h = date.getHours() + ':';\r\n  var m = date.getMinutes() + ':';\r\n  var s = date.getSeconds();\r\n  return Y + M + D + h + m + s;\r\n}\r\n\r\n//数值取万\r\n\r\nexport function tenThousand(props) {\r\n  if (props > 1000) {\r\n    return (props / 10000).toFixed(1) + '万'\r\n  } else {\r\n    return props\r\n  }\r\n}\r\n\r\n//10进制颜色转rgba\r\n\r\nexport function getColor(number) {\r\n  const alpha = number >> 24 & 0xff;\r\n  const red = number >> 16 & 0xff;\r\n  const green = number >> 8 & 0xff;\r\n  const blue = number & 0xff;\r\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\r\n}\r\n\r\n// 防抖函数\r\nexport const debounce = (func, delay) => {\r\n  let timer\r\n  return (...args) => {\r\n    if (timer) {\r\n      clearTimeout(timer)\r\n    }\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args)\r\n    }, delay)\r\n  }\r\n}\r\n\r\n// 节流函数\r\nexport const throttle = (func, delay) => {\r\n  let now = Date.now()\r\n  return (...args) => {\r\n    const current = Date.now()\r\n    if (current - now >= delay) {\r\n      func.apply(this, args)\r\n      now = current\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//颜文字\r\n\r\nexport const wordTransform = (s) => {\r\n  const arr = []\r\n  const reg = /\\[.+?\\]/g\r\n  const msg = s.message\r\n  let key =reg.exec(msg)\r\n  if(key){\r\n    let url = s.emote[key[0]].url\r\n    return  msg.replace(reg,()=>{\r\n      return `<img  alt=\"\"  src='${url}' />`\r\n    })\r\n  }else{\r\n    return s.message\r\n  }\r\n  \r\n}","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx",["207"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport VideoPlayer from '../../components/VideoPlayer'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\"\r\nimport * as actionTypes from '../../store/actions'\r\nimport PlayerDetail from '../../components/PlayerDetail'\r\nimport Comments from '../../components/Comments'\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst Video = (props) => {\r\n  const { location, playerUrl,\r\n    getPlayUrlDispatch, getPlayDetailDispatch,\r\n    getDetailRecommendDispatch, playerDetail,\r\n    detailRecommend, danmu, getDanmuDispatch,\r\n    getCommentsDispatch,comments\r\n  } = props\r\n  const aid = location.search.match(/\\d+/)\r\n  const bvid = location.search.match(/([A-Z])\\w+/g)\r\n  const [showPic, setShowPic] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getPlayDetailDispatch([aid, bvid])\r\n    getDetailRecommendDispatch(aid)\r\n    getCommentsDispatch(aid)\r\n    // eslint-disable-next-line\r\n  }, [Number(aid)])\r\n\r\n  useEffect(() => {\r\n    if (playerDetail !== '') {\r\n      getPlayUrlDispatch([playerDetail.aid, playerDetail.cid])\r\n      getDanmuDispatch(playerDetail.cid)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [playerDetail])\r\n\r\n  const closePic = (props) => {\r\n    setShowPic(!props)\r\n  }\r\n\r\n  return (\r\n    <div className='videoHome'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~-视频</title>\r\n      </Helmet>\r\n      <Header />\r\n      <Header />\r\n      <div className='videoContent'>\r\n        {\r\n          showPic ? <img className='videoPic' src={playerDetail.pic} alt=\"\" /> : null\r\n        }\r\n        <VideoPlayer playerUrl={playerUrl} closePic={closePic} danmu={danmu} />\r\n      </div>\r\n      <div className='detailVideoList'>\r\n        <PlayerDetail comments={comments} playerDetail={playerDetail} detailRecommend={detailRecommend} history={props.history} />\r\n      </div>\r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getPlayUrlDispatch(props) {\r\n        dispatch(actionTypes.getPlayer(props))\r\n      },\r\n      getPlayDetailDispatch(props) {\r\n        dispatch(actionTypes.fetchPlayerDetail(props))\r\n      },\r\n      getDetailRecommendDispatch(props) {\r\n        dispatch(actionTypes.fetchDetailRecommend(props))\r\n      },\r\n      getDanmuDispatch(props) {\r\n        dispatch(actionTypes.fetchDanmu(props))\r\n      },\r\n      getCommentsDispatch(props) {\r\n        dispatch(actionTypes.fetchComments(props))\r\n      },\r\n    };\r\n  }\r\n)(Video);\r\n","D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx",["208"],"import React from 'react'\r\nimport './style.styl'\r\nimport IconRight from '../../assets/arrow_right.png'\r\nimport IconRank from '../../assets/icon_rank.png'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst ChannelList = (props) => {\r\n  const { region,history,rid } = props\r\n\r\n  return (\r\n    <div className='channelList'>\r\n      <div className='listContent'>\r\n        <div className='contentTitle'>\r\n          <div className='title'>热门推荐</div>\r\n          <a href={`/ranking?rid=${rid}`}>\r\n            <img src={IconRank} alt=\"\" />\r\n            <p>排行榜</p>\r\n            <img src={IconRight} alt=\"\" />\r\n          </a>\r\n        </div>\r\n        <div className='itemContent'>\r\n          {\r\n            region.map((item, a) => {\r\n              return (\r\n                <div key={a} className='liveItem' onClick={() => {history.push(`/video?aid=${item.aid}&bvid=${item.bvid}`)}}>\r\n                  <div>\r\n                    <img src={item.pic} alt=\"\" />\r\n                  </div>\r\n                  <div className='liveTitle'>{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ChannelList\r\n","D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx",["209"],"D:\\react\\bilibili\\src\\components\\RankList\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx",["210"],"D:\\react\\bilibili\\src\\components\\Loading\\index.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"211","replacedBy":"215"},{"ruleId":"213","replacedBy":"216"},{"ruleId":"211","replacedBy":"217"},{"ruleId":"213","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":21,"column":6,"nodeType":"221","endLine":21,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":17,"column":100,"nodeType":"225","messageId":"226","endLine":17,"endColumn":113},{"ruleId":"223","severity":1,"message":"227","line":17,"column":114,"nodeType":"225","messageId":"226","endLine":17,"endColumn":138},{"ruleId":"219","severity":1,"message":"228","line":26,"column":6,"nodeType":"221","endLine":26,"endColumn":8,"suggestions":"229"},{"ruleId":"223","severity":1,"message":"230","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":16},{"ruleId":"219","severity":1,"message":"231","line":19,"column":6,"nodeType":"221","endLine":19,"endColumn":19,"suggestions":"232"},{"ruleId":"219","severity":1,"message":"233","line":19,"column":7,"nodeType":"234","endLine":19,"endColumn":18},{"ruleId":"219","severity":1,"message":"235","line":31,"column":6,"nodeType":"221","endLine":31,"endColumn":25,"suggestions":"236"},{"ruleId":"219","severity":1,"message":"233","line":31,"column":7,"nodeType":"234","endLine":31,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":35,"column":21,"nodeType":"239","endLine":35,"endColumn":72},{"ruleId":"211","replacedBy":"240"},{"ruleId":"213","replacedBy":"241"},{"ruleId":"223","severity":1,"message":"242","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":19},{"ruleId":"223","severity":1,"message":"243","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":14},{"ruleId":"223","severity":1,"message":"244","line":11,"column":20,"nodeType":"225","messageId":"226","endLine":11,"endColumn":28},{"ruleId":"223","severity":1,"message":"245","line":12,"column":10,"nodeType":"225","messageId":"226","endLine":12,"endColumn":25},{"ruleId":"223","severity":1,"message":"246","line":26,"column":10,"nodeType":"225","messageId":"226","endLine":26,"endColumn":22},{"ruleId":"223","severity":1,"message":"247","line":26,"column":24,"nodeType":"225","messageId":"226","endLine":26,"endColumn":39},{"ruleId":"223","severity":1,"message":"248","line":34,"column":9,"nodeType":"225","messageId":"226","endLine":34,"endColumn":24},{"ruleId":"219","severity":1,"message":"249","line":43,"column":22,"nodeType":"234","endLine":54,"endColumn":14},{"ruleId":"223","severity":1,"message":"250","line":51,"column":11,"nodeType":"225","messageId":"226","endLine":51,"endColumn":16},{"ruleId":"219","severity":1,"message":"251","line":51,"column":20,"nodeType":"252","endLine":51,"endColumn":21},{"ruleId":"219","severity":1,"message":"253","line":165,"column":6,"nodeType":"221","endLine":165,"endColumn":17,"suggestions":"254"},{"ruleId":"219","severity":1,"message":"255","line":245,"column":6,"nodeType":"221","endLine":245,"endColumn":26,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":20,"column":19,"nodeType":"239","endLine":20,"endColumn":30},{"ruleId":"211","replacedBy":"259"},{"ruleId":"213","replacedBy":"260"},{"ruleId":"219","severity":1,"message":"261","line":20,"column":6,"nodeType":"221","endLine":20,"endColumn":8,"suggestions":"262"},{"ruleId":"219","severity":1,"message":"263","line":60,"column":5,"nodeType":"221","endLine":60,"endColumn":7,"suggestions":"264"},{"ruleId":"223","severity":1,"message":"265","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"265","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"211","replacedBy":"266"},{"ruleId":"213","replacedBy":"267"},{"ruleId":"223","severity":1,"message":"268","line":1,"column":28,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"219","severity":1,"message":"269","line":20,"column":6,"nodeType":"221","endLine":20,"endColumn":8,"suggestions":"270"},{"ruleId":"237","severity":1,"message":"238","line":78,"column":11,"nodeType":"239","endLine":78,"endColumn":71},{"ruleId":"237","severity":1,"message":"238","line":92,"column":9,"nodeType":"239","endLine":92,"endColumn":88},{"ruleId":"211","replacedBy":"271"},{"ruleId":"213","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":27,"column":24,"nodeType":"275","messageId":"276","endLine":27,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":27,"column":30,"nodeType":"275","messageId":"276","endLine":27,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":28,"column":22,"nodeType":"275","messageId":"276","endLine":28,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":28,"column":28,"nodeType":"275","messageId":"276","endLine":28,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":29,"column":24,"nodeType":"275","messageId":"276","endLine":29,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":29,"column":29,"nodeType":"275","messageId":"276","endLine":29,"endColumn":30},{"ruleId":"223","severity":1,"message":"277","line":63,"column":9,"nodeType":"225","messageId":"226","endLine":63,"endColumn":12},{"ruleId":"223","severity":1,"message":"278","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":16},{"ruleId":"223","severity":1,"message":"279","line":5,"column":8,"nodeType":"225","messageId":"226","endLine":5,"endColumn":16},{"ruleId":"219","severity":1,"message":"280","line":16,"column":5,"nodeType":"221","endLine":16,"endColumn":7,"suggestions":"281"},{"ruleId":"223","severity":1,"message":"282","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":14},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],["283"],["284"],["283"],["284"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'banners', 'getBannerListDispatch', 'getRecommendListDispatch', and 'recommendList.length'. Either include them or remove the dependency array.","ArrayExpression",["285"],"@typescript-eslint/no-unused-vars","'upAchieveLike' is assigned a value but never used.","Identifier","unusedVar","'getUpAchieveLikeDispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUpInfoDispatch', 'getUpStatDispatch', 'getUpVideoDispatch', and 'mid'. Either include them or remove the dependency array.",["286"],"'ChatList' is defined but never used.","React Hook useEffect has missing dependencies: 'getRegionDispatch' and 'rid'. Either include them or remove the dependency array.",["287"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has missing dependencies: 'list' and 'type'. Either include them or remove the dependency array. You can also do a functional update 'setList(l => ...)' if you only need 'list' in the 'setList' call.",["288"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["283"],["284"],"'ReactPlayer' is defined but never used.","'BarDot' is defined but never used.","'throttle' is defined but never used.","'setPlayerDetail' is defined but never used.","'showControls' is assigned a value but never used.","'setShowControls' is assigned a value but never used.","'MAX_DANMU_COUNT' is assigned a value but never used.","Assignments to the 'barrageTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'start' is assigned a value but never used.","Assignments to the 'start' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'handleUpdate' and 'isLive'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'handleChangePlay' and 'time'. Either include them or remove the dependency array.",["290"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["283"],["284"],"React Hook useEffect has missing dependencies: 'getStreamInfoDispatch', 'getStreamingDispatch', and 'roomid'. Either include them or remove the dependency array.",["291"],"React Hook useEffect has a missing dependency: 'roomid'. Either include it or remove the dependency array.",["292"],"'useEffect' is defined but never used.",["283"],["284"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getLiveListDispatch' and 'liveList.length'. Either include them or remove the dependency array.",["293"],["283"],["284"],"no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator","'arr' is assigned a value but never used.","'Comments' is defined but never used.","'LazyLoad' is defined but never used.","React Hook useEffect has missing dependencies: 'getRankingListDispatch' and 'rid'. Either include them or remove the dependency array.",["294"],"'IconUp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [banners, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",{"range":"315","text":"316"},"Update the dependencies array to be: [getUpInfoDispatch, getUpStatDispatch, getUpVideoDispatch, mid]",{"range":"317","text":"318"},"Update the dependencies array to be: [getRegionDispatch, rid]",{"range":"319","text":"320"},"Update the dependencies array to be: [list, page, type]",{"range":"321","text":"322"},"Update the dependencies array to be: [handleUpdate, isLive, playerUrl]",{"range":"323","text":"324"},"Update the dependencies array to be: [handleChangePlay, playerUrl, playing, time]",{"range":"325","text":"326"},"Update the dependencies array to be: [getStreamInfoDispatch, getStreamingDispatch, roomid]",{"range":"327","text":"328"},"Update the dependencies array to be: [roomid]",{"range":"329","text":"330"},"Update the dependencies array to be: [getLiveListDispatch, liveList.length]",{"range":"331","text":"332"},"Update the dependencies array to be: [getRankingListDispatch, rid]",{"range":"333","text":"334"},[736,738],"[banners, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",[975,977],"[getUpInfoDispatch, getUpStatDispatch, getUpVideoDispatch, mid]",[618,631],"[getRegionDispatch, rid]",[1066,1085],"[list, page, type]",[4934,4945],"[handleUpdate, isLive, playerUrl]",[7155,7175],"[handleChangePlay, playerUrl, playing, time]",[813,815],"[getStreamInfoDispatch, getStreamingDispatch, roomid]",[2188,2190],"[roomid]",[594,596],"[getLiveListDispatch, liveList.length]",[558,560],"[getRankingListDispatch, rid]"]