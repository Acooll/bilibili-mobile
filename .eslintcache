[{"D:\\react\\bilibili\\src\\index.tsx":"1","D:\\react\\bilibili\\src\\pages\\Search\\index.tsx":"2","D:\\react\\bilibili\\src\\store\\index.ts":"3","D:\\react\\bilibili\\src\\pages\\Index\\index.tsx":"4","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx":"5","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx":"6","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx":"7","D:\\react\\bilibili\\src\\store\\reducers.ts":"8","D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx":"9","D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx":"10","D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx":"11","D:\\react\\bilibili\\src\\components\\Avatar.tsx":"12","D:\\react\\bilibili\\src\\components\\Comments\\index.tsx":"13","D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts":"14","D:\\react\\bilibili\\src\\api\\index.ts":"15","D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx":"16","D:\\react\\bilibili\\src\\App.tsx":"17","D:\\react\\bilibili\\src\\components\\Logo.tsx":"18","D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx":"19","D:\\react\\bilibili\\src\\components\\Header\\index.tsx":"20","D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx":"21","D:\\react\\bilibili\\src\\api\\axios.ts":"22","D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx":"23","D:\\react\\bilibili\\src\\pages\\Live\\index.tsx":"24","D:\\react\\bilibili\\src\\pages\\My\\index.tsx":"25","D:\\react\\bilibili\\src\\store\\actions.ts":"26","D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx":"27","D:\\react\\bilibili\\src\\util\\index.ts":"28","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx":"29","D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx":"30","D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx":"31","D:\\react\\bilibili\\src\\components\\RankList\\index.tsx":"32","D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx":"33"},{"size":221,"mtime":1609244241164,"results":"34","hashOfConfig":"35"},{"size":3814,"mtime":1610028976773,"results":"36","hashOfConfig":"35"},{"size":256,"mtime":1609325772460,"results":"37","hashOfConfig":"35"},{"size":1479,"mtime":1610028486645,"results":"38","hashOfConfig":"35"},{"size":4663,"mtime":1610037997871,"results":"39","hashOfConfig":"35"},{"size":1282,"mtime":1610028697324,"results":"40","hashOfConfig":"35"},{"size":1741,"mtime":1610028842813,"results":"41","hashOfConfig":"35"},{"size":4596,"mtime":1610036208533,"results":"42","hashOfConfig":"35"},{"size":1465,"mtime":1610022139052,"results":"43","hashOfConfig":"35"},{"size":9514,"mtime":1610038597349,"results":"44","hashOfConfig":"35"},{"size":1688,"mtime":1610022354341,"results":"45","hashOfConfig":"35"},{"size":1978,"mtime":1609690833486,"results":"46","hashOfConfig":"35"},{"size":1810,"mtime":1610037442220,"results":"47","hashOfConfig":"35"},{"size":7550,"mtime":1609854452958,"results":"48","hashOfConfig":"35"},{"size":2382,"mtime":1610036026340,"results":"49","hashOfConfig":"35"},{"size":4222,"mtime":1610028791853,"results":"50","hashOfConfig":"35"},{"size":1403,"mtime":1610027933171,"results":"51","hashOfConfig":"35"},{"size":7774,"mtime":1609247415108,"results":"52","hashOfConfig":"35"},{"size":871,"mtime":1610021625755,"results":"53","hashOfConfig":"35"},{"size":672,"mtime":1610024029784,"results":"54","hashOfConfig":"35"},{"size":4968,"mtime":1610037386590,"results":"55","hashOfConfig":"35"},{"size":992,"mtime":1610018169037,"results":"56","hashOfConfig":"35"},{"size":1585,"mtime":1609944034402,"results":"57","hashOfConfig":"35"},{"size":1329,"mtime":1610028742372,"results":"58","hashOfConfig":"35"},{"size":2202,"mtime":1610028908296,"results":"59","hashOfConfig":"35"},{"size":7452,"mtime":1610036156851,"results":"60","hashOfConfig":"35"},{"size":2770,"mtime":1609587215987,"results":"61","hashOfConfig":"35"},{"size":1729,"mtime":1609833575145,"results":"62","hashOfConfig":"35"},{"size":2582,"mtime":1610029061668,"results":"63","hashOfConfig":"35"},{"size":1203,"mtime":1610021757375,"results":"64","hashOfConfig":"35"},{"size":1204,"mtime":1610029026492,"results":"65","hashOfConfig":"35"},{"size":2135,"mtime":1610025494737,"results":"66","hashOfConfig":"35"},{"size":2539,"mtime":1610025795388,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"x6upha",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\bilibili\\src\\index.tsx",[],["154","155"],"D:\\react\\bilibili\\src\\pages\\Search\\index.tsx",[],["156","157"],"D:\\react\\bilibili\\src\\store\\index.ts",[],["158","159"],"D:\\react\\bilibili\\src\\pages\\Index\\index.tsx",["160"],"import React, { useEffect} from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport Swiper from '../../components/Swiper/index'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\nimport Recommend from '../../components/Recommend'\r\nimport MenuBar from '../../components/MenuBar'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Index = (props) => {\r\n  const { getBannerListDispatch, banners, recommendList, getRecommendListDispatch } = props\r\n  useEffect(() => {\r\n    if (!banners) {\r\n      getBannerListDispatch()\r\n    }\r\n    if (!recommendList.length) {\r\n      getRecommendListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~</title>\r\n      </Helmet>\r\n      <Header />\r\n      <MenuBar  history={props.history} chooseId={0} />\r\n      <div className='swiper_container'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <div className='recommend'>\r\n        <Recommend recommendList={recommendList}   />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getBannerListDispatch() {\r\n        dispatch(actionTypes.getBannerList())\r\n      },\r\n      getRecommendListDispatch() {\r\n        dispatch(actionTypes.getRecommendList())\r\n      },\r\n    };\r\n  }\r\n)(Index);\r\n","D:\\react\\bilibili\\src\\pages\\Space\\index.tsx",["161"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport { tenThousand } from '../../util'\r\nimport { Helmet } from 'react-helmet'\r\nimport LazyLoad from 'react-lazyload'\r\nimport IconPlayed from '../../assets/played.png'\r\nimport IconDanmuNum from '../../assets/danmu_num.png'\r\nimport IconMale from '../../assets/male.png'\r\nimport IconFemale from '../../assets/female.png'\r\n\r\n\r\n\r\nconst Space = (props) => {\r\n  const { upInfo, getUpInfoDispatch, upVideo, getUpVideoDispatch ,history,upStat,getUpStatDispatch} = props\r\n  const [choiceVideo, setChoiceVideo] = useState(false)\r\n  const mid = props.location.search.match(/\\d+/)\r\n\r\n  useEffect(() => {\r\n    getUpInfoDispatch(mid)\r\n    getUpVideoDispatch(mid)\r\n    getUpStatDispatch(mid)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~-个人空间</title>\r\n      </Helmet>\r\n      <Header />\r\n      <Header />\r\n      <div>\r\n        <div className='banner'>\r\n          <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/bannerTop_new.png\" alt=\"\" />\r\n        </div>\r\n        <div className='userInfo'>\r\n          { \r\n            upInfo.sex==='保密'? null : <div> <img className='genderIcon' src={upInfo.sex==='女'?IconFemale:IconMale} alt=\"\"/></div>\r\n          }\r\n         \r\n          <img src={upInfo.face} alt=\"\" className='avatar' />\r\n          <div className='fansInfo'>\r\n            <div className='fans'>\r\n              <div className='item'>\r\n                <div className='number'>{tenThousand(upStat.follower)}</div>\r\n                <div className='type'>粉丝</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>{tenThousand(upStat.following)}</div>\r\n                <div className='type'>关注</div>\r\n              </div>\r\n              <div className='columLine'></div>\r\n              <div className='item'>\r\n                <div className='number'>4532</div>\r\n                <div className='type'>获赞</div>\r\n              </div>\r\n            </div>\r\n            <div className='editInfo'>编辑资料</div>\r\n          </div>\r\n        </div>\r\n        <div className='username'>\r\n          {upInfo.name}\r\n        </div>\r\n        <div className='userAbout'>{upInfo.sign}</div>\r\n        <div className='tabBar'>\r\n          <div> <span className={choiceVideo ? ' ' : 'active'} onClick={() => setChoiceVideo(false)}>动态</span></div>\r\n          <div><span className={choiceVideo ? 'active' : ''} onClick={() => setChoiceVideo(true)}>视频</span></div>\r\n        </div>\r\n        <div className='content'>\r\n          {upVideo.length ?\r\n            upVideo.map(item => {\r\n              return (\r\n                <div className='spaceItem' key={item.aid} onClick={() => { history.push(`/video?aid=${item.aid}&bvid=${item.bvid}`) }}>\r\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\" />}>\r\n                    <img src={item.pic} alt=\"\" />\r\n                  </LazyLoad>\r\n                <div className='listRight'>\r\n                  <div className='title' dangerouslySetInnerHTML={{ __html: item.title }}></div>\r\n                  <div className='play_info'>\r\n                    <img className='icon_played' src={IconPlayed} alt=\"\" />\r\n\r\n                    <div className='played'>{tenThousand(item.play)}</div>\r\n\r\n                    <img className='icon_danmu' src={IconDanmuNum} alt=\"\" />\r\n                    <div className='danmu'>{item.video_review}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              )\r\n            })\r\n            :\r\n            <>\r\n              <img src=\"http://s1.hdslb.com/bfs/static/jinkela/mstation-h5/assets/noContent.png\" alt=\"\" />\r\n              <div className='sleep'>小哔睡着了~</div>\r\n            </>\r\n          }\r\n        \r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getUpInfoDispatch(props) {\r\n        dispatch(actionTypes.fetchUpInfo(props))\r\n      },\r\n      getUpVideoDispatch(props) {\r\n        dispatch(actionTypes.fetchUpVideo(props))\r\n      },\r\n      getUpStatDispatch(props) {\r\n        dispatch(actionTypes.fetchUpStat(props))\r\n      },\r\n    };\r\n  }\r\n)(Space);\r\n","D:\\react\\bilibili\\src\\pages\\Channel\\index.tsx",["162","163","164"],"import React, { useEffect } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport Header from '../../components/Header'\r\nimport {Helmet} from 'react-helmet'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MenuBar from '../../components/MenuBar'\r\nimport ChannelList from '../../components/ChannelList'\r\nimport ChatList from '../../components/ChatList';\r\n\r\nconst Channel = (props) => {\r\n  const { location, region, getRegionDispatch, history } = props\r\n  const rid = location.search.match(/\\d+/)\r\n\r\n  useEffect(() => {\r\n    console.log(321)\r\n    getRegionDispatch(rid)\r\n  }, [Number(rid)])\r\n\r\n  // const fetchData = (props) =>{\r\n  //   console.log(333)\r\n  //   getRegionDispatch(rid)\r\n  // }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Helmet>\r\n        <title>频道</title>\r\n      </Helmet>\r\n      <Header />\r\n      <MenuBar history={history} chooseId={Number(rid)} />\r\n      <ChannelList region={region} history={history} rid={rid} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getRegionDispatch(props) {\r\n        dispatch(actionTypes.fetchRegion(props))\r\n      },\r\n    };\r\n  }\r\n)(Channel);\r\n","D:\\react\\bilibili\\src\\pages\\LivesArea\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\reducers.ts",[],"D:\\react\\bilibili\\src\\components\\Swiper\\index.tsx",["165"],"import React, { useState, useEffect } from 'react'\r\nimport \"swiper/dist/css/swiper.css\"\r\nimport Swiper from 'swiper'\r\nimport './style.styl'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst Slider = (props) => {\r\n  const [sliderSwiper, setSliderSwiper] = useState(null)\r\n\r\n  const { bannerList } = props\r\n\r\n  useEffect(() => {\r\n    if (bannerList && !sliderSwiper) {\r\n      let sliderSwiper = new Swiper(\".slider-container\", {\r\n        loop: true,\r\n        autoplay: {\r\n          delay: 3000,\r\n          disableOnInteraction: false,\r\n        },\r\n        pagination: { el: '.swiper-pagination' },\r\n      });\r\n      setSliderSwiper(sliderSwiper);\r\n    }\r\n  }, [bannerList, sliderSwiper])\r\n\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <div className=\"swiper-wrapper\">\r\n        {bannerList ?\r\n          bannerList.map((slider, i) => {\r\n            return (\r\n              <div className=\"swiper-slide\" key={slider.id}>\r\n                <div className=\"slider-nav\">\r\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\" />}>\r\n                    <img src={slider.pic} width=\"100%\" height=\"100%\" />\r\n                  </LazyLoad>\r\n                </div>\r\n              </div>\r\n            )\r\n          }) : null\r\n        }\r\n\r\n      </div>\r\n      <div className=\"swiper-pagination\"></div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Slider",["166","167"],"D:\\react\\bilibili\\src\\components\\VideoPlayer\\index.tsx",["168","169","170","171","172","173","174","175","176","177","178","179"],"D:\\react\\bilibili\\src\\components\\LiveTypes\\index.tsx",["180"],"import React from 'react'\r\nimport './style.styl'\r\nimport IconRight from '../../assets/right.png'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst LiveTypes = (props) => {\r\n\r\n  const { liveList, history } = props\r\n\r\n  return (\r\n    <>\r\n      {\r\n        liveList.map((list, i) => {\r\n          return (\r\n            <div key={i} className='liveList'>\r\n              <div className='topBg'></div>\r\n              <div className='listContent'>\r\n                <div className='contentTitle'>\r\n                  <div className='title'>{list.module_info.title}</div>\r\n                  <a href=\"\">\r\n                    <p>进去看看</p>\r\n                    <img src={IconRight} alt=\"\" />\r\n                  </a>\r\n                </div>\r\n                <div className='itemContent'>\r\n                  {\r\n                    list.list.map((item, a) => {\r\n                      return (\r\n                        <div key={a} className='liveItem' onClick={() => history.push(`/live_room?roomid=${item.roomid}`)}>\r\n                          <div>\r\n                            <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\" />}>\r\n                              <img src={item.cover} alt=\"\" />\r\n                            </LazyLoad>\r\n                          </div>\r\n                          <div className='liveTitle'>{item.title}</div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default LiveTypes","D:\\react\\bilibili\\src\\components\\Avatar.tsx",[],"D:\\react\\bilibili\\src\\components\\Comments\\index.tsx",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\ChatWS.ts",[],["181","182"],"D:\\react\\bilibili\\src\\api\\index.ts",[],"D:\\react\\bilibili\\src\\pages\\LiveRoom\\index.tsx",["183","184"],"D:\\react\\bilibili\\src\\App.tsx",[],"D:\\react\\bilibili\\src\\components\\Logo.tsx",[],"D:\\react\\bilibili\\src\\components\\Recommend\\index.tsx",["185"],"import React, { useEffect } from 'react'\r\nimport './style.styl'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\n\r\nconst Recommend = (props) => {\r\n  const { recommendList } = props\r\n\r\n  return (\r\n    <div className='recommend_container'>\r\n      {\r\n        recommendList.map(item => {\r\n          return (\r\n          <a key={item.aid} href={`/video?aid=${item.aid}&bvid=${item.bvid}`}  className='recommend_item'>\r\n              <div className='item'>\r\n                <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\"/>}>\r\n                <img src={item.pic} alt=\"\" />\r\n              </LazyLoad>\r\n              </div>\r\n              <p className='title'>{item.title}</p>\r\n            </a>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Recommend","D:\\react\\bilibili\\src\\components\\Header\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\PlayerDetail\\index.tsx",["186"],"import React, { useEffect, useState } from 'react'\r\nimport IconHot from '../../assets/fire.png'\r\nimport './style.styl'\r\nimport IconZan from '../../assets/zan.png'\r\nimport IconStar from '../../assets/star.png'\r\nimport IconDownload from '../../assets/download.png'\r\nimport IconBan from '../../assets/ban.png'\r\nimport classnames from 'classnames'\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport { timestampToTime, tenThousand } from '../../util'\r\nimport Comments from '../../components/Comments'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst PlayerDetail = (props) => {\r\n  const { playerDetail, detailRecommend, history,comments } = props\r\n  const author = Object.assign({}, playerDetail.owner)\r\n  const stat= Object.assign({}, playerDetail.stat)\r\n\r\n  const [spread, setSpread] = useState(false)\r\n  const [selectComments, setSelectComments] = useState(false)\r\n\r\n  const toggleSpread = () => {\r\n    if (spread) {\r\n      setSpread(false)\r\n    } else {\r\n      setSpread(true)\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className='detail_container'>\r\n      <div className='player_info'   >\r\n        <div className='top_info'>\r\n          <div className='hot'>\r\n            <img src={IconHot} alt=\"\" />\r\n            <span>热门</span>\r\n          </div>\r\n          <h1 className={classnames(spread ? 'spreadTitle' : 'title')}>{playerDetail.title}</h1>\r\n          <img className={classnames('iconDown', spread ? 'spreadClass' : '')} onClick={toggleSpread} src={IconArrowDown} alt=\"\" />\r\n        </div>\r\n\r\n        {\r\n          spread ? <div className='detail_info'>\r\n            <div className='author' >\r\n              <img className='avatar' src={author.face} alt=\"\" />\r\n              <div>\r\n                <div className='author_name'>{author.name}</div>\r\n                <div className='fans'>60.5万粉丝</div>\r\n              </div>\r\n              <div className='payAttention'>+ 关注</div>\r\n            </div>\r\n            <div className='viewInfo'>\r\n              <span>{tenThousand(playerDetail.stat.view)}观看</span>\r\n              <span>{tenThousand(playerDetail.stat.danmaku)}弹幕</span>\r\n              <span>{timestampToTime(playerDetail.pubdate).substr(0, 10)}</span>\r\n            </div>\r\n            <div className='banInfo'>\r\n              <img src={IconBan} alt=\"\" />\r\n              <span>未经作者授权禁止转载</span>\r\n            </div>\r\n            <div className='authorSay'>{playerDetail.desc}</div>\r\n            <div className='left_info'>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div> :\r\n            <div className='video_tool'>\r\n              <div className='author'>\r\n                <img className='avatar' src={author.face} alt=\"\" />\r\n                <div className='author_name'>{author.name}</div>\r\n              </div>\r\n              <div className='tool'>\r\n                <img src={IconZan} alt=\"\" />\r\n                <span>{tenThousand(stat.like)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconStar} alt=\"\" />\r\n                <span>{tenThousand(stat.favorite)}</span>\r\n              </div>\r\n              <div className='tool'> <img src={IconDownload} alt=\"\" />\r\n                <span>缓存</span></div>\r\n            </div>\r\n        }\r\n      </div>\r\n      <div className='recommendList'>\r\n        <div className='listBar'>\r\n          <div onClick={() => setSelectComments(false)}> <span className={selectComments ? '' : 'selected'}>相关推荐</span></div>\r\n          <div onClick={() => setSelectComments(true)}><span className={selectComments ? 'selected' : ''}>评论</span></div>\r\n        </div>\r\n        <div className={classnames('listContainer', selectComments ? 'commentsSelected' : '')} >\r\n          {\r\n            detailRecommend.map((item) => {\r\n              return (\r\n                <div key={item.aid} className='listItem' onClick={()=> history.push(`/video?aid=${item.aid}&bvid=${item.bvid}`)}>\r\n                  <div>\r\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src='http://s1.hdslb.com/bfs/static/blive/live-web-h5/static/images/img_loading.a3516567.png' alt=\"m\"/>}>\r\n                    <img src={item.pic} alt=\"\" />\r\n                    </LazyLoad>\r\n                  </div>\r\n                  <div>{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {\r\n          selectComments? <Comments comments={comments} history={history} /> : null\r\n        } \r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default PlayerDetail","D:\\react\\bilibili\\src\\api\\axios.ts",[],"D:\\react\\bilibili\\src\\components\\ChatList\\index.tsx",[],["187","188"],"D:\\react\\bilibili\\src\\pages\\Live\\index.tsx",["189","190"],"import React, { useEffect, useState } from 'react'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet'\r\nimport Header from '../../components/Header'\r\nimport './style.styl'\r\nimport Swiper from '../../components/Swiper'\r\nimport LiveTypes from '../../components/LiveTypes'\r\n\r\n\r\nconst Live = (props) => {\r\n\r\n  const { getLiveListDispatch, liveList, banners } = props\r\n\r\n\r\n  useEffect(() => {\r\n    if (!liveList.length) {\r\n      getLiveListDispatch()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~-直播</title>\r\n      </Helmet>\r\n      <Header />\r\n      <div className='liveBar'>\r\n        <div>首页</div>\r\n        <div>频道</div>\r\n        <div className='live'>直播</div>\r\n        <div>排行</div>\r\n        <div>我的</div>\r\n      </div>\r\n      <div className='liveBanner'>\r\n        <Swiper bannerList={banners} />\r\n      </div>\r\n      <LiveTypes liveList={liveList.slice(13)} history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getLiveListDispatch() {\r\n        dispatch(actionTypes.fetchLiveList())\r\n      },\r\n\r\n    };\r\n  }\r\n)(Live);","D:\\react\\bilibili\\src\\pages\\My\\index.tsx",[],"D:\\react\\bilibili\\src\\store\\actions.ts",[],"D:\\react\\bilibili\\src\\components\\MenuBar\\index.tsx",["191","192"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\n\r\nimport './style.styl'\r\n\r\nimport IconArrowDown from '../../assets/arrow_down.png'\r\nimport IconArrowUp from '../../assets/arrow_up.png'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst menuList = [\r\n  { \"tid\": 0, \"typename\": \"首页\" },\r\n  { \"tid\": 1, \"typename\": \"动画\" },\r\n  { \"tid\": 13, \"typename\": \"番剧\" },\r\n  { \"tid\": 168, \"typename\": \"国创\" },\r\n  { \"tid\": 3, \"typename\": \"音乐\" },\r\n  { \"tid\": 129, \"typename\": \"舞蹈\" },\r\n  { \"tid\": 4, \"typename\": \"游戏\" }, {\r\n    \"tid\": 36, \"typename\": \"科技\"\r\n  },\r\n  { \"tid\": 188, \"typename\": \"数码\" },\r\n  { \"tid\": 160, \"typename\": \"生活\" },\r\n  { \"tid\": 119, \"typename\": \"鬼畜\" },\r\n  { \"tid\": 155, \"typename\": \"时尚\" },\r\n  { \"tid\": 5, \"typename\": \"娱乐\" },\r\n  { \"tid\": 181, \"typename\": \"影视\" },\r\n  { \"tid\": 177, \"typename\": \"纪录片\" },\r\n  { \"tid\": 23, \"typename\": \"电影\" },\r\n  // { \"tid\": 11, \"typename\": \"电视剧\" },\r\n  { \"tid\": 999, \"typename\": \"直播\" }\r\n]\r\n\r\n\r\n\r\nconst MenuBar = (props) => {\r\n  const { typeList, history, chooseId, fetchData } = props\r\n  const [chooseBar, setChooseBar] = useState(0)\r\n\r\n  const barRef = useRef(null)\r\n\r\n  console.log(typeList)\r\n  const [showBox, setShowBox] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setChooseBar(chooseId)\r\n  }, [chooseId])\r\n\r\n  const selectRegion = (e) => {\r\n    if (e === 0) {\r\n      history.push('/index')\r\n    } else {\r\n      if (e === 999) {\r\n        history.push('/lives')\r\n      } else {\r\n        if (fetchData !== undefined) {\r\n          fetchData(true)\r\n        }\r\n        history.push(`/channel?tid=${e}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='bar_container'>\r\n\r\n      <div className='menu_bar'>\r\n        <div className='menu' ref={barRef}>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}>\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='arrow'>\r\n          <img src={IconArrowDown} onClick={() => setShowBox(true)} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('wrapper', showBox ? 'showWrapper' : '')}>\r\n        <div className='wrapper_box'>\r\n          {menuList.map(item => (\r\n            <div key={item.tid}\r\n              className={classNames(chooseBar === item.tid ? 'activeMenu' : '')}\r\n              onClick={selectRegion.bind(this, item.tid)}\r\n            >\r\n              {item.typename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img className='icon_up' src={IconArrowUp} onClick={() => setShowBox(false)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MenuBar",["193","194"],"D:\\react\\bilibili\\src\\util\\index.ts",["195","196","197","198","199","200","201"],"//时间戳转换日期\r\n\r\nexport function timestampToTime(timestamp) {\r\n  var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n  var Y = date.getFullYear() + '-';\r\n  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n  var D = date.getDate() + ' ';\r\n  var h = date.getHours() + ':';\r\n  var m = date.getMinutes() + ':';\r\n  var s = date.getSeconds();\r\n  return Y + M + D + h + m + s;\r\n}\r\n\r\n//数值取万\r\n\r\nexport function tenThousand(props) {\r\n  if (props > 1000) {\r\n    return (props / 10000).toFixed(1) + '万'\r\n  } else {\r\n    return props\r\n  }\r\n}\r\n\r\n//10进制颜色转rgba\r\n\r\nexport function getColor(number) {\r\n  const alpha = number >> 24 & 0xff;\r\n  const red = number >> 16 & 0xff;\r\n  const green = number >> 8 & 0xff;\r\n  const blue = number & 0xff;\r\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\r\n}\r\n\r\n// 防抖函数\r\nexport const debounce = (func, delay) => {\r\n  let timer\r\n  return (...args) => {\r\n    if (timer) {\r\n      clearTimeout(timer)\r\n    }\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args)\r\n    }, delay)\r\n  }\r\n}\r\n\r\n// 节流函数\r\nexport const throttle = (func, delay) => {\r\n  let now = Date.now()\r\n  return (...args) => {\r\n    const current = Date.now()\r\n    if (current - now >= delay) {\r\n      func.apply(this, args)\r\n      now = current\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//颜文字\r\n\r\nexport const wordTransform = (s) => {\r\n  const arr = []\r\n  const reg = /\\[.+?\\]/g\r\n  const msg = s.message\r\n  let key =reg.exec(msg)\r\n  if(key){\r\n    let url = s.emote[key[0]].url\r\n    return  msg.replace(reg,()=>{\r\n      return `<img  alt=\"\"  src='${url}' />`\r\n    })\r\n  }else{\r\n    return s.message\r\n  }\r\n  \r\n}","D:\\react\\bilibili\\src\\pages\\Video\\index.tsx",["202"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport VideoPlayer from '../../components/VideoPlayer'\r\nimport './style.styl'\r\nimport { connect } from \"react-redux\"\r\nimport * as actionTypes from '../../store/actions'\r\nimport PlayerDetail from '../../components/PlayerDetail'\r\nimport Comments from '../../components/Comments'\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst Video = (props) => {\r\n  const { location, playerUrl,\r\n    getPlayUrlDispatch, getPlayDetailDispatch,\r\n    getDetailRecommendDispatch, playerDetail,\r\n    detailRecommend, danmu, getDanmuDispatch,\r\n    getCommentsDispatch,comments\r\n  } = props\r\n  const aid = location.search.match(/\\d+/)\r\n  const bvid = location.search.match(/([A-Z])\\w+/g)\r\n  const [showPic, setShowPic] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getPlayDetailDispatch([aid, bvid])\r\n    getDetailRecommendDispatch(aid)\r\n    getCommentsDispatch(aid)\r\n    // eslint-disable-next-line\r\n  }, [Number(aid)])\r\n\r\n  useEffect(() => {\r\n    if (playerDetail !== '') {\r\n      getPlayUrlDispatch([playerDetail.aid, playerDetail.cid])\r\n      getDanmuDispatch(playerDetail.cid)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [playerDetail])\r\n\r\n  const closePic = (props) => {\r\n    setShowPic(!props)\r\n  }\r\n\r\n  return (\r\n    <div className='videoHome'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~-视频</title>\r\n      </Helmet>\r\n      <Header />\r\n      <Header />\r\n      <div className='videoContent'>\r\n        {\r\n          showPic ? <img className='videoPic' src={playerDetail.pic} alt=\"\" /> : null\r\n        }\r\n        <VideoPlayer playerUrl={playerUrl} closePic={closePic} danmu={danmu} />\r\n      </div>\r\n      <div className='detailVideoList'>\r\n        <PlayerDetail comments={comments} playerDetail={playerDetail} detailRecommend={detailRecommend} history={props.history} />\r\n      </div>\r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getPlayUrlDispatch(props) {\r\n        dispatch(actionTypes.getPlayer(props))\r\n      },\r\n      getPlayDetailDispatch(props) {\r\n        dispatch(actionTypes.fetchPlayerDetail(props))\r\n      },\r\n      getDetailRecommendDispatch(props) {\r\n        dispatch(actionTypes.fetchDetailRecommend(props))\r\n      },\r\n      getDanmuDispatch(props) {\r\n        dispatch(actionTypes.fetchDanmu(props))\r\n      },\r\n      getCommentsDispatch(props) {\r\n        dispatch(actionTypes.fetchComments(props))\r\n      },\r\n    };\r\n  }\r\n)(Video);\r\n","D:\\react\\bilibili\\src\\components\\ChannelList\\index.tsx",["203"],"import React from 'react'\r\nimport './style.styl'\r\nimport IconRight from '../../assets/arrow_right.png'\r\nimport IconRank from '../../assets/icon_rank.png'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nconst ChannelList = (props) => {\r\n  const { region,history,rid } = props\r\n\r\n  return (\r\n    <div className='channelList'>\r\n      <div className='listContent'>\r\n        <div className='contentTitle'>\r\n          <div className='title'>热门推荐</div>\r\n          <a href={`/ranking?rid=${rid}`}>\r\n            <img src={IconRank} alt=\"\" />\r\n            <p>排行榜</p>\r\n            <img src={IconRight} alt=\"\" />\r\n          </a>\r\n        </div>\r\n        <div className='itemContent'>\r\n          {\r\n            region.map((item, a) => {\r\n              return (\r\n                <div key={a} className='liveItem' onClick={() => {history.push(`/video?aid=${item.aid}&bvid=${item.bvid}`)}}>\r\n                  <div>\r\n                    <img src={item.pic} alt=\"\" />\r\n                  </div>\r\n                  <div className='liveTitle'>{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ChannelList\r\n","D:\\react\\bilibili\\src\\pages\\Ranking\\index.tsx",["204"],"import React, { useEffect } from 'react'\r\nimport  './style.styl'\r\nimport IconLeft from '../../assets/arrow_left.png'\r\nimport RankList from '../../components/RankList'\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from \"react-redux\";\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst Ranking = (props) =>{\r\n  const {rankingList,getRankingListDispatch,location,history} = props\r\n  const rid = location.search.match(/\\d+/)\r\n\r\n  useEffect(()=>{\r\n    getRankingListDispatch(rid)\r\n  },[])\r\n\r\n\r\n  return(\r\n    <div className='rank_container'>\r\n      <Helmet>\r\n        <title>Bilibili-( ゜- ゜)つロ干杯~-排行榜</title>\r\n      </Helmet>\r\n      <div className='rank_header'>\r\n        <img src={IconLeft} alt=\"\"  onClick={()=> window.history.back()} />\r\n        <div>排行榜</div>\r\n      </div>\r\n      <div>\r\n        <RankList rankingList={rankingList}  history={history} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return state;\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      getRankingListDispatch(props) {\r\n        dispatch(actionTypes.fetchRankingList(props))\r\n      },\r\n  }\r\n}\r\n)(Ranking);\r\n","D:\\react\\bilibili\\src\\components\\RankList\\index.tsx",[],"D:\\react\\bilibili\\src\\components\\SeachDetail\\index.tsx",["205"],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"210"},{"ruleId":"208","replacedBy":"211"},{"ruleId":"206","replacedBy":"212"},{"ruleId":"208","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":20,"column":6,"nodeType":"216","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"214","severity":1,"message":"218","line":25,"column":6,"nodeType":"216","endLine":25,"endColumn":8,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":16},{"ruleId":"214","severity":1,"message":"224","line":19,"column":6,"nodeType":"216","endLine":19,"endColumn":19,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":19,"column":7,"nodeType":"227","endLine":19,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":35,"column":21,"nodeType":"230","endLine":35,"endColumn":72},{"ruleId":"206","replacedBy":"231"},{"ruleId":"208","replacedBy":"232"},{"ruleId":"220","severity":1,"message":"233","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"220","severity":1,"message":"234","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":14},{"ruleId":"220","severity":1,"message":"235","line":11,"column":20,"nodeType":"222","messageId":"223","endLine":11,"endColumn":28},{"ruleId":"220","severity":1,"message":"236","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":25},{"ruleId":"220","severity":1,"message":"237","line":26,"column":10,"nodeType":"222","messageId":"223","endLine":26,"endColumn":22},{"ruleId":"220","severity":1,"message":"238","line":26,"column":24,"nodeType":"222","messageId":"223","endLine":26,"endColumn":39},{"ruleId":"220","severity":1,"message":"239","line":34,"column":9,"nodeType":"222","messageId":"223","endLine":34,"endColumn":24},{"ruleId":"214","severity":1,"message":"240","line":42,"column":22,"nodeType":"227","endLine":53,"endColumn":14},{"ruleId":"220","severity":1,"message":"241","line":50,"column":11,"nodeType":"222","messageId":"223","endLine":50,"endColumn":16},{"ruleId":"214","severity":1,"message":"242","line":50,"column":20,"nodeType":"243","endLine":50,"endColumn":21},{"ruleId":"214","severity":1,"message":"244","line":162,"column":6,"nodeType":"216","endLine":162,"endColumn":17,"suggestions":"245"},{"ruleId":"214","severity":1,"message":"246","line":242,"column":6,"nodeType":"216","endLine":242,"endColumn":26,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":20,"column":19,"nodeType":"230","endLine":20,"endColumn":30},{"ruleId":"206","replacedBy":"250"},{"ruleId":"208","replacedBy":"251"},{"ruleId":"214","severity":1,"message":"252","line":20,"column":6,"nodeType":"216","endLine":20,"endColumn":8,"suggestions":"253"},{"ruleId":"214","severity":1,"message":"254","line":60,"column":5,"nodeType":"216","endLine":60,"endColumn":7,"suggestions":"255"},{"ruleId":"220","severity":1,"message":"256","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"256","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"206","replacedBy":"257"},{"ruleId":"208","replacedBy":"258"},{"ruleId":"220","severity":1,"message":"259","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"260","line":20,"column":6,"nodeType":"216","endLine":20,"endColumn":8,"suggestions":"261"},{"ruleId":"228","severity":1,"message":"229","line":78,"column":11,"nodeType":"230","endLine":78,"endColumn":71},{"ruleId":"228","severity":1,"message":"229","line":92,"column":9,"nodeType":"230","endLine":92,"endColumn":88},{"ruleId":"206","replacedBy":"262"},{"ruleId":"208","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":27,"column":24,"nodeType":"266","messageId":"267","endLine":27,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":27,"column":30,"nodeType":"266","messageId":"267","endLine":27,"endColumn":31},{"ruleId":"264","severity":1,"message":"265","line":28,"column":22,"nodeType":"266","messageId":"267","endLine":28,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":28,"column":28,"nodeType":"266","messageId":"267","endLine":28,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":29,"column":24,"nodeType":"266","messageId":"267","endLine":29,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":29,"column":29,"nodeType":"266","messageId":"267","endLine":29,"endColumn":30},{"ruleId":"220","severity":1,"message":"268","line":63,"column":9,"nodeType":"222","messageId":"223","endLine":63,"endColumn":12},{"ruleId":"220","severity":1,"message":"269","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":16},{"ruleId":"220","severity":1,"message":"270","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":16},{"ruleId":"214","severity":1,"message":"271","line":15,"column":5,"nodeType":"216","endLine":15,"endColumn":7,"suggestions":"272"},{"ruleId":"220","severity":1,"message":"273","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":14},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],["274"],["275"],["274"],["275"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'banners', 'getBannerListDispatch', 'getRecommendListDispatch', and 'recommendList.length'. Either include them or remove the dependency array.","ArrayExpression",["276"],"React Hook useEffect has missing dependencies: 'getUpInfoDispatch', 'getUpStatDispatch', 'getUpVideoDispatch', and 'mid'. Either include them or remove the dependency array.",["277"],"@typescript-eslint/no-unused-vars","'ChatList' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getRegionDispatch' and 'rid'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["274"],["275"],"'ReactPlayer' is defined but never used.","'BarDot' is defined but never used.","'throttle' is defined but never used.","'setPlayerDetail' is defined but never used.","'showControls' is assigned a value but never used.","'setShowControls' is assigned a value but never used.","'MAX_DANMU_COUNT' is assigned a value but never used.","Assignments to the 'barrageTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'start' is assigned a value but never used.","Assignments to the 'start' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'handleUpdate' and 'isLive'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'handleChangePlay' and 'time'. Either include them or remove the dependency array.",["280"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["274"],["275"],"React Hook useEffect has missing dependencies: 'getStreamInfoDispatch', 'getStreamingDispatch', and 'roomid'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'roomid'. Either include it or remove the dependency array.",["282"],"'useEffect' is defined but never used.",["274"],["275"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getLiveListDispatch' and 'liveList.length'. Either include them or remove the dependency array.",["283"],["274"],["275"],"no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator","'arr' is assigned a value but never used.","'Comments' is defined but never used.","'LazyLoad' is defined but never used.","React Hook useEffect has missing dependencies: 'getRankingListDispatch' and 'rid'. Either include them or remove the dependency array.",["284"],"'IconUp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [banners, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",{"range":"303","text":"304"},"Update the dependencies array to be: [getUpInfoDispatch, getUpStatDispatch, getUpVideoDispatch, mid]",{"range":"305","text":"306"},"Update the dependencies array to be: [getRegionDispatch, rid]",{"range":"307","text":"308"},"Update the dependencies array to be: [handleUpdate, isLive, playerUrl]",{"range":"309","text":"310"},"Update the dependencies array to be: [handleChangePlay, playerUrl, playing, time]",{"range":"311","text":"312"},"Update the dependencies array to be: [getStreamInfoDispatch, getStreamingDispatch, roomid]",{"range":"313","text":"314"},"Update the dependencies array to be: [roomid]",{"range":"315","text":"316"},"Update the dependencies array to be: [getLiveListDispatch, liveList.length]",{"range":"317","text":"318"},"Update the dependencies array to be: [getRankingListDispatch, rid]",{"range":"319","text":"320"},[678,680],"[banners, getBannerListDispatch, getRecommendListDispatch, recommendList.length]",[898,900],"[getUpInfoDispatch, getUpStatDispatch, getUpVideoDispatch, mid]",[618,631],"[getRegionDispatch, rid]",[4753,4764],"[handleUpdate, isLive, playerUrl]",[6974,6994],"[handleChangePlay, playerUrl, playing, time]",[813,815],"[getStreamInfoDispatch, getStreamingDispatch, roomid]",[2188,2190],"[roomid]",[539,541],"[getLiveListDispatch, liveList.length]",[502,504],"[getRankingListDispatch, rid]"]